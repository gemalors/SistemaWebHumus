//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class DBHumusEntities : DbContext
    {
        public DBHumusEntities()
            : base("name=DBHumusEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AsignacionCuestionario> AsignacionCuestionario { get; set; }
        public DbSet<Autores> Autores { get; set; }
        public DbSet<Carreras> Carreras { get; set; }
        public DbSet<Categorias> Categorias { get; set; }
        public DbSet<Comentarios> Comentarios { get; set; }
        public DbSet<Consultas> Consultas { get; set; }
        public DbSet<Cuestionarios> Cuestionarios { get; set; }
        public DbSet<DatosContactoEditorial> DatosContactoEditorial { get; set; }
        public DbSet<Documentos> Documentos { get; set; }
        public DbSet<EstadosTiposproceso> EstadosTiposproceso { get; set; }
        public DbSet<Formatos> Formatos { get; set; }
        public DbSet<Imagenes> Imagenes { get; set; }
        public DbSet<InformacionEditorial> InformacionEditorial { get; set; }
        public DbSet<Libros> Libros { get; set; }
        public DbSet<MensajesTiposproceso> MensajesTiposproceso { get; set; }
        public DbSet<Noticias> Noticias { get; set; }
        public DbSet<Notificacion> Notificacion { get; set; }
        public DbSet<ObservacionesProceso> ObservacionesProceso { get; set; }
        public DbSet<OpcionPreguntaSeleccion> OpcionPreguntaSeleccion { get; set; }
        public DbSet<OpcionRespuesta> OpcionRespuesta { get; set; }
        public DbSet<Periodos> Periodos { get; set; }
        public DbSet<PreguntaAbierta> PreguntaAbierta { get; set; }
        public DbSet<PreguntaObservaciones> PreguntaObservaciones { get; set; }
        public DbSet<Preguntas> Preguntas { get; set; }
        public DbSet<Procesos> Procesos { get; set; }
        public DbSet<RequerimientosProcesos> RequerimientosProcesos { get; set; }
        public DbSet<RespuestaRequerimiento> RespuestaRequerimiento { get; set; }
        public DbSet<Respuestas> Respuestas { get; set; }
        public DbSet<SlidersEditorial> SlidersEditorial { get; set; }
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
        public DbSet<Tablainter1> Tablainter1 { get; set; }
        public DbSet<Tablainter2> Tablainter2 { get; set; }
        public DbSet<TipodeDato> TipodeDato { get; set; }
        public DbSet<Tipoformatos> Tipoformatos { get; set; }
        public DbSet<TipoNotificacion> TipoNotificacion { get; set; }
        public DbSet<TipoPregunta> TipoPregunta { get; set; }
        public DbSet<Tiposproceso> Tiposproceso { get; set; }
        public DbSet<Tiposusuarios> Tiposusuarios { get; set; }
        public DbSet<Usuarios> Usuarios { get; set; }
        public DbSet<VistasLibros> VistasLibros { get; set; }
        public DbSet<Years> Years { get; set; }
    
        public virtual ObjectResult<Nullable<int>> EditarAutor(Nullable<int> idautor, string nombre1, string nombre2, string apellidoP, string apellidoS, string cedula, string email, string telefono, string direccion, string filial)
        {
            var idautorParameter = idautor.HasValue ?
                new ObjectParameter("Idautor", idautor) :
                new ObjectParameter("Idautor", typeof(int));
    
            var nombre1Parameter = nombre1 != null ?
                new ObjectParameter("Nombre1", nombre1) :
                new ObjectParameter("Nombre1", typeof(string));
    
            var nombre2Parameter = nombre2 != null ?
                new ObjectParameter("Nombre2", nombre2) :
                new ObjectParameter("Nombre2", typeof(string));
    
            var apellidoPParameter = apellidoP != null ?
                new ObjectParameter("ApellidoP", apellidoP) :
                new ObjectParameter("ApellidoP", typeof(string));
    
            var apellidoSParameter = apellidoS != null ?
                new ObjectParameter("ApellidoS", apellidoS) :
                new ObjectParameter("ApellidoS", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var filialParameter = filial != null ?
                new ObjectParameter("Filial", filial) :
                new ObjectParameter("Filial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarAutor", idautorParameter, nombre1Parameter, nombre2Parameter, apellidoPParameter, apellidoSParameter, cedulaParameter, emailParameter, telefonoParameter, direccionParameter, filialParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarAutor(Nullable<int> idautor)
        {
            var idautorParameter = idautor.HasValue ?
                new ObjectParameter("Idautor", idautor) :
                new ObjectParameter("Idautor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarAutor", idautorParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> InsertarAutor(Nullable<int> iDlibro, string nombre1, string nombre2, string apellidoP, string apellidoS, string cedula, string email, string telefono, string direccion, string filial)
        {
            var iDlibroParameter = iDlibro.HasValue ?
                new ObjectParameter("IDlibro", iDlibro) :
                new ObjectParameter("IDlibro", typeof(int));
    
            var nombre1Parameter = nombre1 != null ?
                new ObjectParameter("Nombre1", nombre1) :
                new ObjectParameter("Nombre1", typeof(string));
    
            var nombre2Parameter = nombre2 != null ?
                new ObjectParameter("Nombre2", nombre2) :
                new ObjectParameter("Nombre2", typeof(string));
    
            var apellidoPParameter = apellidoP != null ?
                new ObjectParameter("ApellidoP", apellidoP) :
                new ObjectParameter("ApellidoP", typeof(string));
    
            var apellidoSParameter = apellidoS != null ?
                new ObjectParameter("ApellidoS", apellidoS) :
                new ObjectParameter("ApellidoS", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var filialParameter = filial != null ?
                new ObjectParameter("Filial", filial) :
                new ObjectParameter("Filial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("InsertarAutor", iDlibroParameter, nombre1Parameter, nombre2Parameter, apellidoPParameter, apellidoSParameter, cedulaParameter, emailParameter, telefonoParameter, direccionParameter, filialParameter);
        }
    
        public virtual ObjectResult<VerAutores_Result> VerAutores(Nullable<int> iDlibro)
        {
            var iDlibroParameter = iDlibro.HasValue ?
                new ObjectParameter("IDlibro", iDlibro) :
                new ObjectParameter("IDlibro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerAutores_Result>("VerAutores", iDlibroParameter);
        }
    
        public virtual ObjectResult<ConsultarCarreras_Result> ConsultarCarreras()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarCarreras_Result>("ConsultarCarreras");
        }
    
        public virtual ObjectResult<Nullable<int>> EditarCarreras(Nullable<int> idcarrera, string carrera)
        {
            var idcarreraParameter = idcarrera.HasValue ?
                new ObjectParameter("Idcarrera", idcarrera) :
                new ObjectParameter("Idcarrera", typeof(int));
    
            var carreraParameter = carrera != null ?
                new ObjectParameter("carrera", carrera) :
                new ObjectParameter("carrera", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarCarreras", idcarreraParameter, carreraParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarCarreras(Nullable<int> idcarrera)
        {
            var idcarreraParameter = idcarrera.HasValue ?
                new ObjectParameter("Idcarrera", idcarrera) :
                new ObjectParameter("Idcarrera", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarCarreras", idcarreraParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RegistroCarrera(string detallecarrera)
        {
            var detallecarreraParameter = detallecarrera != null ?
                new ObjectParameter("Detallecarrera", detallecarrera) :
                new ObjectParameter("Detallecarrera", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RegistroCarrera", detallecarreraParameter);
        }
    
        public virtual ObjectResult<ConsultarCategoria_Result> ConsultarCategoria()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarCategoria_Result>("ConsultarCategoria");
        }
    
        public virtual ObjectResult<Nullable<int>> EditarCategoria(Nullable<int> idcate, string detallecate)
        {
            var idcateParameter = idcate.HasValue ?
                new ObjectParameter("Idcate", idcate) :
                new ObjectParameter("Idcate", typeof(int));
    
            var detallecateParameter = detallecate != null ?
                new ObjectParameter("Detallecate", detallecate) :
                new ObjectParameter("Detallecate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarCategoria", idcateParameter, detallecateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarCategoria(Nullable<int> idcate)
        {
            var idcateParameter = idcate.HasValue ?
                new ObjectParameter("Idcate", idcate) :
                new ObjectParameter("Idcate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarCategoria", idcateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RegistroCategoria(string detallecate)
        {
            var detallecateParameter = detallecate != null ?
                new ObjectParameter("Detallecate", detallecate) :
                new ObjectParameter("Detallecate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RegistroCategoria", detallecateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarComentario(Nullable<int> idcomentario)
        {
            var idcomentarioParameter = idcomentario.HasValue ?
                new ObjectParameter("Idcomentario", idcomentario) :
                new ObjectParameter("Idcomentario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarComentario", idcomentarioParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> InsertarComentario(Nullable<int> idproceso, string comentario, string fechacoment, Nullable<int> idusuario)
        {
            var idprocesoParameter = idproceso.HasValue ?
                new ObjectParameter("Idproceso", idproceso) :
                new ObjectParameter("Idproceso", typeof(int));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));
    
            var fechacomentParameter = fechacoment != null ?
                new ObjectParameter("Fechacoment", fechacoment) :
                new ObjectParameter("Fechacoment", typeof(string));
    
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("Idusuario", idusuario) :
                new ObjectParameter("Idusuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("InsertarComentario", idprocesoParameter, comentarioParameter, fechacomentParameter, idusuarioParameter);
        }
    
        public virtual ObjectResult<VerComentarios_Result> VerComentarios(Nullable<int> idprocess)
        {
            var idprocessParameter = idprocess.HasValue ?
                new ObjectParameter("Idprocess", idprocess) :
                new ObjectParameter("Idprocess", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerComentarios_Result>("VerComentarios", idprocessParameter);
        }
    
        public virtual ObjectResult<ConsultarComparativaNumVistasLibrosxYearAnterior_Result> ConsultarComparativaNumVistasLibrosxYearAnterior()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarComparativaNumVistasLibrosxYearAnterior_Result>("ConsultarComparativaNumVistasLibrosxYearAnterior");
        }
    
        public virtual ObjectResult<ConsultarComparativaPeriodanterior_Result> ConsultarComparativaPeriodanterior()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarComparativaPeriodanterior_Result>("ConsultarComparativaPeriodanterior");
        }
    
        public virtual ObjectResult<ConsultarComparativaYearanterior_Result> ConsultarComparativaYearanterior()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarComparativaYearanterior_Result>("ConsultarComparativaYearanterior");
        }
    
        public virtual ObjectResult<ConsultarNumLibrosPublicadosxCarrera_Result> ConsultarNumLibrosPublicadosxCarrera()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarNumLibrosPublicadosxCarrera_Result>("ConsultarNumLibrosPublicadosxCarrera");
        }
    
        public virtual ObjectResult<ConsultarNumLibrosPublicadosxCategoria_Result> ConsultarNumLibrosPublicadosxCategoria()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarNumLibrosPublicadosxCategoria_Result>("ConsultarNumLibrosPublicadosxCategoria");
        }
    
        public virtual ObjectResult<ConsultarNumLibrosPublicadosxPeriodo_Result> ConsultarNumLibrosPublicadosxPeriodo(Nullable<int> idpe)
        {
            var idpeParameter = idpe.HasValue ?
                new ObjectParameter("idpe", idpe) :
                new ObjectParameter("idpe", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarNumLibrosPublicadosxPeriodo_Result>("ConsultarNumLibrosPublicadosxPeriodo", idpeParameter);
        }
    
        public virtual ObjectResult<ConsultarNumLibrosPublicadosxYear_Result> ConsultarNumLibrosPublicadosxYear(Nullable<int> idy)
        {
            var idyParameter = idy.HasValue ?
                new ObjectParameter("idy", idy) :
                new ObjectParameter("idy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarNumLibrosPublicadosxYear_Result>("ConsultarNumLibrosPublicadosxYear", idyParameter);
        }
    
        public virtual ObjectResult<ConsultarNumVistasLibrosxCarrera_Result> ConsultarNumVistasLibrosxCarrera()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarNumVistasLibrosxCarrera_Result>("ConsultarNumVistasLibrosxCarrera");
        }
    
        public virtual ObjectResult<ConsultarNumVistasLibrosxYear_Result> ConsultarNumVistasLibrosxYear(Nullable<int> idy)
        {
            var idyParameter = idy.HasValue ?
                new ObjectParameter("idy", idy) :
                new ObjectParameter("idy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarNumVistasLibrosxYear_Result>("ConsultarNumVistasLibrosxYear", idyParameter);
        }
    
        public virtual ObjectResult<DetalleConsultaxId_Result> DetalleConsultaxId(Nullable<int> ide)
        {
            var ideParameter = ide.HasValue ?
                new ObjectParameter("ide", ide) :
                new ObjectParameter("ide", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DetalleConsultaxId_Result>("DetalleConsultaxId", ideParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarConsulta(Nullable<int> idconsulta, Nullable<int> idparametro)
        {
            var idconsultaParameter = idconsulta.HasValue ?
                new ObjectParameter("idconsulta", idconsulta) :
                new ObjectParameter("idconsulta", typeof(int));
    
            var idparametroParameter = idparametro.HasValue ?
                new ObjectParameter("idparametro", idparametro) :
                new ObjectParameter("idparametro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarConsulta", idconsultaParameter, idparametroParameter);
        }
    
        public virtual ObjectResult<ListarConsultas_Result> ListarConsultas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarConsultas_Result>("ListarConsultas");
        }
    
        public virtual ObjectResult<VerLibrospublicadosxYears_Result> VerLibrospublicadosxYears()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerLibrospublicadosxYears_Result>("VerLibrospublicadosxYears");
        }
    
        public virtual ObjectResult<VerLibrosVistas_Result> VerLibrosVistas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerLibrosVistas_Result>("VerLibrosVistas");
        }
    
        public virtual ObjectResult<VerNumLibrosPublicadosxPeriodo_Result> VerNumLibrosPublicadosxPeriodo(Nullable<int> idc)
        {
            var idcParameter = idc.HasValue ?
                new ObjectParameter("idc", idc) :
                new ObjectParameter("idc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerNumLibrosPublicadosxPeriodo_Result>("VerNumLibrosPublicadosxPeriodo", idcParameter);
        }
    
        public virtual ObjectResult<VerNumLibrosPublicadosxYears_Result> VerNumLibrosPublicadosxYears(Nullable<int> idc)
        {
            var idcParameter = idc.HasValue ?
                new ObjectParameter("idc", idc) :
                new ObjectParameter("idc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerNumLibrosPublicadosxYears_Result>("VerNumLibrosPublicadosxYears", idcParameter);
        }
    
        public virtual ObjectResult<VerNumVistasLibrosxYears_Result> VerNumVistasLibrosxYears(Nullable<int> idc)
        {
            var idcParameter = idc.HasValue ?
                new ObjectParameter("idc", idc) :
                new ObjectParameter("idc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerNumVistasLibrosxYears_Result>("VerNumVistasLibrosxYears", idcParameter);
        }
    
        public virtual ObjectResult<VistasLibrosxYears_Result> VistasLibrosxYears()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VistasLibrosxYears_Result>("VistasLibrosxYears");
        }
    
        public virtual ObjectResult<Nullable<int>> EditarCuestionario(Nullable<int> idcuestionario, string nombre, string descripcion, string fechacreado, string asignado, string tipocuestionario)
        {
            var idcuestionarioParameter = idcuestionario.HasValue ?
                new ObjectParameter("Idcuestionario", idcuestionario) :
                new ObjectParameter("Idcuestionario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var fechacreadoParameter = fechacreado != null ?
                new ObjectParameter("fechacreado", fechacreado) :
                new ObjectParameter("fechacreado", typeof(string));
    
            var asignadoParameter = asignado != null ?
                new ObjectParameter("asignado", asignado) :
                new ObjectParameter("asignado", typeof(string));
    
            var tipocuestionarioParameter = tipocuestionario != null ?
                new ObjectParameter("tipocuestionario", tipocuestionario) :
                new ObjectParameter("tipocuestionario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarCuestionario", idcuestionarioParameter, nombreParameter, descripcionParameter, fechacreadoParameter, asignadoParameter, tipocuestionarioParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarFechaEdicionAsignacion(Nullable<int> iduser, Nullable<int> idc, string fecha, Nullable<int> ida)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            var idcParameter = idc.HasValue ?
                new ObjectParameter("Idc", idc) :
                new ObjectParameter("Idc", typeof(int));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var idaParameter = ida.HasValue ?
                new ObjectParameter("Ida", ida) :
                new ObjectParameter("Ida", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarFechaEdicionAsignacion", iduserParameter, idcParameter, fechaParameter, idaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarIdpregCuestionario(Nullable<int> idP, Nullable<int> idc)
        {
            var idPParameter = idP.HasValue ?
                new ObjectParameter("IdP", idP) :
                new ObjectParameter("IdP", typeof(int));
    
            var idcParameter = idc.HasValue ?
                new ObjectParameter("Idc", idc) :
                new ObjectParameter("Idc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarIdpregCuestionario", idPParameter, idcParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarAsignacionCuestionarioUsuario(Nullable<int> ida)
        {
            var idaParameter = ida.HasValue ?
                new ObjectParameter("Ida", ida) :
                new ObjectParameter("Ida", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarAsignacionCuestionarioUsuario", idaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarCuestionarios(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarCuestionarios", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarRespuesta(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarRespuesta", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> FinalizarCuestionario(Nullable<int> iduser, Nullable<int> idc, string fecha, Nullable<int> ida)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            var idcParameter = idc.HasValue ?
                new ObjectParameter("Idc", idc) :
                new ObjectParameter("Idc", typeof(int));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var idaParameter = ida.HasValue ?
                new ObjectParameter("Ida", ida) :
                new ObjectParameter("Ida", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FinalizarCuestionario", iduserParameter, idcParameter, fechaParameter, idaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> InsertarAsignacionCuestionario(Nullable<int> numc, Nullable<int> idp, string fecha)
        {
            var numcParameter = numc.HasValue ?
                new ObjectParameter("numc", numc) :
                new ObjectParameter("numc", typeof(int));
    
            var idpParameter = idp.HasValue ?
                new ObjectParameter("Idp", idp) :
                new ObjectParameter("Idp", typeof(int));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("InsertarAsignacionCuestionario", numcParameter, idpParameter, fechaParameter);
        }
    
        public virtual ObjectResult<ListarCuestionarios_Result> ListarCuestionarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarCuestionarios_Result>("ListarCuestionarios");
        }
    
        public virtual ObjectResult<Nullable<int>> RegitrarCuestionario(string nombre, string descripcion, string fechacreado, string asignado, string tipocuestionario, Nullable<int> numc)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var fechacreadoParameter = fechacreado != null ?
                new ObjectParameter("fechacreado", fechacreado) :
                new ObjectParameter("fechacreado", typeof(string));
    
            var asignadoParameter = asignado != null ?
                new ObjectParameter("asignado", asignado) :
                new ObjectParameter("asignado", typeof(string));
    
            var tipocuestionarioParameter = tipocuestionario != null ?
                new ObjectParameter("tipocuestionario", tipocuestionario) :
                new ObjectParameter("tipocuestionario", typeof(string));
    
            var numcParameter = numc.HasValue ?
                new ObjectParameter("numc", numc) :
                new ObjectParameter("numc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RegitrarCuestionario", nombreParameter, descripcionParameter, fechacreadoParameter, asignadoParameter, tipocuestionarioParameter, numcParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RespuestasPreguntasCuestionario(Nullable<int> idc, Nullable<int> ida, Nullable<int> idresp, Nullable<int> idob, Nullable<int> idpregunta, Nullable<int> user, Nullable<int> idresplogica, string respabierta, string titulorespabierta, Nullable<int> idopcionpreg, Nullable<int> identificadorTipoPregunta, string tipoOpciones, Nullable<bool> estado, Nullable<int> respuestas)
        {
            var idcParameter = idc.HasValue ?
                new ObjectParameter("idc", idc) :
                new ObjectParameter("idc", typeof(int));
    
            var idaParameter = ida.HasValue ?
                new ObjectParameter("ida", ida) :
                new ObjectParameter("ida", typeof(int));
    
            var idrespParameter = idresp.HasValue ?
                new ObjectParameter("Idresp", idresp) :
                new ObjectParameter("Idresp", typeof(int));
    
            var idobParameter = idob.HasValue ?
                new ObjectParameter("idob", idob) :
                new ObjectParameter("idob", typeof(int));
    
            var idpreguntaParameter = idpregunta.HasValue ?
                new ObjectParameter("idpregunta", idpregunta) :
                new ObjectParameter("idpregunta", typeof(int));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(int));
    
            var idresplogicaParameter = idresplogica.HasValue ?
                new ObjectParameter("idresplogica", idresplogica) :
                new ObjectParameter("idresplogica", typeof(int));
    
            var respabiertaParameter = respabierta != null ?
                new ObjectParameter("respabierta", respabierta) :
                new ObjectParameter("respabierta", typeof(string));
    
            var titulorespabiertaParameter = titulorespabierta != null ?
                new ObjectParameter("titulorespabierta", titulorespabierta) :
                new ObjectParameter("titulorespabierta", typeof(string));
    
            var idopcionpregParameter = idopcionpreg.HasValue ?
                new ObjectParameter("idopcionpreg", idopcionpreg) :
                new ObjectParameter("idopcionpreg", typeof(int));
    
            var identificadorTipoPreguntaParameter = identificadorTipoPregunta.HasValue ?
                new ObjectParameter("identificadorTipoPregunta", identificadorTipoPregunta) :
                new ObjectParameter("identificadorTipoPregunta", typeof(int));
    
            var tipoOpcionesParameter = tipoOpciones != null ?
                new ObjectParameter("tipoOpciones", tipoOpciones) :
                new ObjectParameter("tipoOpciones", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            var respuestasParameter = respuestas.HasValue ?
                new ObjectParameter("respuestas", respuestas) :
                new ObjectParameter("respuestas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RespuestasPreguntasCuestionario", idcParameter, idaParameter, idrespParameter, idobParameter, idpreguntaParameter, userParameter, idresplogicaParameter, respabiertaParameter, titulorespabiertaParameter, idopcionpregParameter, identificadorTipoPreguntaParameter, tipoOpcionesParameter, estadoParameter, respuestasParameter);
        }
    
        public virtual ObjectResult<VerCuestionarioRegistrado_Result> VerCuestionarioRegistrado(Nullable<int> idcuestionario)
        {
            var idcuestionarioParameter = idcuestionario.HasValue ?
                new ObjectParameter("Idcuestionario", idcuestionario) :
                new ObjectParameter("Idcuestionario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerCuestionarioRegistrado_Result>("VerCuestionarioRegistrado", idcuestionarioParameter);
        }
    
        public virtual ObjectResult<VerDetalleAsignacion_Result> VerDetalleAsignacion(Nullable<int> idasignacion)
        {
            var idasignacionParameter = idasignacion.HasValue ?
                new ObjectParameter("Idasignacion", idasignacion) :
                new ObjectParameter("Idasignacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerDetalleAsignacion_Result>("VerDetalleAsignacion", idasignacionParameter);
        }
    
        public virtual ObjectResult<VerDetalleCuestionario_Result> VerDetalleCuestionario(Nullable<int> idcuestionario, string tipouser)
        {
            var idcuestionarioParameter = idcuestionario.HasValue ?
                new ObjectParameter("Idcuestionario", idcuestionario) :
                new ObjectParameter("Idcuestionario", typeof(int));
    
            var tipouserParameter = tipouser != null ?
                new ObjectParameter("tipouser", tipouser) :
                new ObjectParameter("tipouser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerDetalleCuestionario_Result>("VerDetalleCuestionario", idcuestionarioParameter, tipouserParameter);
        }
    
        public virtual ObjectResult<VerRespuestaPregAbierta_Result> VerRespuestaPregAbierta(Nullable<int> iduser, Nullable<int> idc, Nullable<int> ida)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            var idcParameter = idc.HasValue ?
                new ObjectParameter("Idc", idc) :
                new ObjectParameter("Idc", typeof(int));
    
            var idaParameter = ida.HasValue ?
                new ObjectParameter("Ida", ida) :
                new ObjectParameter("Ida", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerRespuestaPregAbierta_Result>("VerRespuestaPregAbierta", iduserParameter, idcParameter, idaParameter);
        }
    
        public virtual ObjectResult<VerRespuestaPregOpcionesTipo1_Result> VerRespuestaPregOpcionesTipo1(Nullable<int> iduser, Nullable<int> idc, Nullable<int> ida)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            var idcParameter = idc.HasValue ?
                new ObjectParameter("Idc", idc) :
                new ObjectParameter("Idc", typeof(int));
    
            var idaParameter = ida.HasValue ?
                new ObjectParameter("Ida", ida) :
                new ObjectParameter("Ida", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerRespuestaPregOpcionesTipo1_Result>("VerRespuestaPregOpcionesTipo1", iduserParameter, idcParameter, idaParameter);
        }
    
        public virtual ObjectResult<VerRespuestaPregOpcionesTipo2_Result> VerRespuestaPregOpcionesTipo2(Nullable<int> iduser, Nullable<int> idc, Nullable<int> ida)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            var idcParameter = idc.HasValue ?
                new ObjectParameter("Idc", idc) :
                new ObjectParameter("Idc", typeof(int));
    
            var idaParameter = ida.HasValue ?
                new ObjectParameter("Ida", ida) :
                new ObjectParameter("Ida", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerRespuestaPregOpcionesTipo2_Result>("VerRespuestaPregOpcionesTipo2", iduserParameter, idcParameter, idaParameter);
        }
    
        public virtual ObjectResult<VerRespuestaPregTipo4_Result> VerRespuestaPregTipo4(Nullable<int> iduser, Nullable<int> idc, Nullable<int> ida)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            var idcParameter = idc.HasValue ?
                new ObjectParameter("Idc", idc) :
                new ObjectParameter("Idc", typeof(int));
    
            var idaParameter = ida.HasValue ?
                new ObjectParameter("Ida", ida) :
                new ObjectParameter("Ida", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerRespuestaPregTipo4_Result>("VerRespuestaPregTipo4", iduserParameter, idcParameter, idaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarDatosContacto(Nullable<int> iddatos, string email, string horario, string direccion, string telefono)
        {
            var iddatosParameter = iddatos.HasValue ?
                new ObjectParameter("Iddatos", iddatos) :
                new ObjectParameter("Iddatos", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var horarioParameter = horario != null ?
                new ObjectParameter("horario", horario) :
                new ObjectParameter("horario", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarDatosContacto", iddatosParameter, emailParameter, horarioParameter, direccionParameter, telefonoParameter);
        }
    
        public virtual ObjectResult<VerDatosContacto_Result> VerDatosContacto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerDatosContacto_Result>("VerDatosContacto");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<int>> EditarEstadoDocumentosEnviados(Nullable<int> idemisor, Nullable<int> idproce, string estadoconsulta, string estadoedit)
        {
            var idemisorParameter = idemisor.HasValue ?
                new ObjectParameter("idemisor", idemisor) :
                new ObjectParameter("idemisor", typeof(int));
    
            var idproceParameter = idproce.HasValue ?
                new ObjectParameter("Idproce", idproce) :
                new ObjectParameter("Idproce", typeof(int));
    
            var estadoconsultaParameter = estadoconsulta != null ?
                new ObjectParameter("estadoconsulta", estadoconsulta) :
                new ObjectParameter("estadoconsulta", typeof(string));
    
            var estadoeditParameter = estadoedit != null ?
                new ObjectParameter("estadoedit", estadoedit) :
                new ObjectParameter("estadoedit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarEstadoDocumentosEnviados", idemisorParameter, idproceParameter, estadoconsultaParameter, estadoeditParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarEstadoDocumentosEnviadosxEvaluadores(Nullable<int> idadmin, Nullable<int> idautor, Nullable<int> idproce, string estadoconsulta, string estadoedit)
        {
            var idadminParameter = idadmin.HasValue ?
                new ObjectParameter("idadmin", idadmin) :
                new ObjectParameter("idadmin", typeof(int));
    
            var idautorParameter = idautor.HasValue ?
                new ObjectParameter("idautor", idautor) :
                new ObjectParameter("idautor", typeof(int));
    
            var idproceParameter = idproce.HasValue ?
                new ObjectParameter("Idproce", idproce) :
                new ObjectParameter("Idproce", typeof(int));
    
            var estadoconsultaParameter = estadoconsulta != null ?
                new ObjectParameter("estadoconsulta", estadoconsulta) :
                new ObjectParameter("estadoconsulta", typeof(string));
    
            var estadoeditParameter = estadoedit != null ?
                new ObjectParameter("estadoedit", estadoedit) :
                new ObjectParameter("estadoedit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarEstadoDocumentosEnviadosxEvaluadores", idadminParameter, idautorParameter, idproceParameter, estadoconsultaParameter, estadoeditParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarDocumento(Nullable<int> iDdocu)
        {
            var iDdocuParameter = iDdocu.HasValue ?
                new ObjectParameter("IDdocu", iDdocu) :
                new ObjectParameter("IDdocu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarDocumento", iDdocuParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> InsertarDocumento(Nullable<int> idproceso, string documento, string detalledocu, Nullable<int> visiblea, string emisor, string fecha, string estado, Nullable<int> visibleadmin, Nullable<int> visiblevaluador, Nullable<int> idemisor, Nullable<int> idreq, Nullable<bool> obligatorio)
        {
            var idprocesoParameter = idproceso.HasValue ?
                new ObjectParameter("Idproceso", idproceso) :
                new ObjectParameter("Idproceso", typeof(int));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var detalledocuParameter = detalledocu != null ?
                new ObjectParameter("Detalledocu", detalledocu) :
                new ObjectParameter("Detalledocu", typeof(string));
    
            var visibleaParameter = visiblea.HasValue ?
                new ObjectParameter("visiblea", visiblea) :
                new ObjectParameter("visiblea", typeof(int));
    
            var emisorParameter = emisor != null ?
                new ObjectParameter("emisor", emisor) :
                new ObjectParameter("emisor", typeof(string));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var visibleadminParameter = visibleadmin.HasValue ?
                new ObjectParameter("visibleadmin", visibleadmin) :
                new ObjectParameter("visibleadmin", typeof(int));
    
            var visiblevaluadorParameter = visiblevaluador.HasValue ?
                new ObjectParameter("visiblevaluador", visiblevaluador) :
                new ObjectParameter("visiblevaluador", typeof(int));
    
            var idemisorParameter = idemisor.HasValue ?
                new ObjectParameter("idemisor", idemisor) :
                new ObjectParameter("idemisor", typeof(int));
    
            var idreqParameter = idreq.HasValue ?
                new ObjectParameter("idreq", idreq) :
                new ObjectParameter("idreq", typeof(int));
    
            var obligatorioParameter = obligatorio.HasValue ?
                new ObjectParameter("obligatorio", obligatorio) :
                new ObjectParameter("obligatorio", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("InsertarDocumento", idprocesoParameter, documentoParameter, detalledocuParameter, visibleaParameter, emisorParameter, fechaParameter, estadoParameter, visibleadminParameter, visiblevaluadorParameter, idemisorParameter, idreqParameter, obligatorioParameter);
        }
    
        public virtual ObjectResult<VerDocumentosAutor_Result> VerDocumentosAutor(Nullable<int> idproces, Nullable<int> idemisor)
        {
            var idprocesParameter = idproces.HasValue ?
                new ObjectParameter("Idproces", idproces) :
                new ObjectParameter("Idproces", typeof(int));
    
            var idemisorParameter = idemisor.HasValue ?
                new ObjectParameter("idemisor", idemisor) :
                new ObjectParameter("idemisor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerDocumentosAutor_Result>("VerDocumentosAutor", idprocesParameter, idemisorParameter);
        }
    
        public virtual ObjectResult<VerDocumentosEnviados_Result> VerDocumentosEnviados(Nullable<int> idproces, Nullable<int> idemisor)
        {
            var idprocesParameter = idproces.HasValue ?
                new ObjectParameter("Idproces", idproces) :
                new ObjectParameter("Idproces", typeof(int));
    
            var idemisorParameter = idemisor.HasValue ?
                new ObjectParameter("idemisor", idemisor) :
                new ObjectParameter("idemisor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerDocumentosEnviados_Result>("VerDocumentosEnviados", idprocesParameter, idemisorParameter);
        }
    
        public virtual ObjectResult<VerDocumentosRecibidos_Result> VerDocumentosRecibidos(Nullable<int> idproces, Nullable<int> idemisor)
        {
            var idprocesParameter = idproces.HasValue ?
                new ObjectParameter("Idproces", idproces) :
                new ObjectParameter("Idproces", typeof(int));
    
            var idemisorParameter = idemisor.HasValue ?
                new ObjectParameter("idemisor", idemisor) :
                new ObjectParameter("idemisor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerDocumentosRecibidos_Result>("VerDocumentosRecibidos", idprocesParameter, idemisorParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AgregarEstadoTiposProcesos(Nullable<int> identificador, string detalle, Nullable<int> idtipoproceso, Nullable<bool> requerimientosAutor, Nullable<bool> revision, Nullable<bool> reversado, Nullable<bool> requerimientosAdmin, Nullable<bool> resultados, Nullable<bool> iniciarProceso, Nullable<bool> asignarEvaluadores, Nullable<bool> evaluacionPares, Nullable<bool> publicacionLibro)
        {
            var identificadorParameter = identificador.HasValue ?
                new ObjectParameter("identificador", identificador) :
                new ObjectParameter("identificador", typeof(int));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            var idtipoprocesoParameter = idtipoproceso.HasValue ?
                new ObjectParameter("idtipoproceso", idtipoproceso) :
                new ObjectParameter("idtipoproceso", typeof(int));
    
            var requerimientosAutorParameter = requerimientosAutor.HasValue ?
                new ObjectParameter("requerimientosAutor", requerimientosAutor) :
                new ObjectParameter("requerimientosAutor", typeof(bool));
    
            var revisionParameter = revision.HasValue ?
                new ObjectParameter("revision", revision) :
                new ObjectParameter("revision", typeof(bool));
    
            var reversadoParameter = reversado.HasValue ?
                new ObjectParameter("reversado", reversado) :
                new ObjectParameter("reversado", typeof(bool));
    
            var requerimientosAdminParameter = requerimientosAdmin.HasValue ?
                new ObjectParameter("requerimientosAdmin", requerimientosAdmin) :
                new ObjectParameter("requerimientosAdmin", typeof(bool));
    
            var resultadosParameter = resultados.HasValue ?
                new ObjectParameter("resultados", resultados) :
                new ObjectParameter("resultados", typeof(bool));
    
            var iniciarProcesoParameter = iniciarProceso.HasValue ?
                new ObjectParameter("iniciarProceso", iniciarProceso) :
                new ObjectParameter("iniciarProceso", typeof(bool));
    
            var asignarEvaluadoresParameter = asignarEvaluadores.HasValue ?
                new ObjectParameter("asignarEvaluadores", asignarEvaluadores) :
                new ObjectParameter("asignarEvaluadores", typeof(bool));
    
            var evaluacionParesParameter = evaluacionPares.HasValue ?
                new ObjectParameter("evaluacionPares", evaluacionPares) :
                new ObjectParameter("evaluacionPares", typeof(bool));
    
            var publicacionLibroParameter = publicacionLibro.HasValue ?
                new ObjectParameter("publicacionLibro", publicacionLibro) :
                new ObjectParameter("publicacionLibro", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AgregarEstadoTiposProcesos", identificadorParameter, detalleParameter, idtipoprocesoParameter, requerimientosAutorParameter, revisionParameter, reversadoParameter, requerimientosAdminParameter, resultadosParameter, iniciarProcesoParameter, asignarEvaluadoresParameter, evaluacionParesParameter, publicacionLibroParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarEstadoTiposProcesos(Nullable<int> idestado, string detalle, Nullable<bool> requerimientosAutor, Nullable<bool> revision, Nullable<bool> reversado, Nullable<bool> requerimientosAdmin, Nullable<bool> resultados, Nullable<bool> iniciarProceso, Nullable<bool> asignarEvaluadores, Nullable<bool> evaluacionPares, Nullable<bool> publicacionLibro)
        {
            var idestadoParameter = idestado.HasValue ?
                new ObjectParameter("idestado", idestado) :
                new ObjectParameter("idestado", typeof(int));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            var requerimientosAutorParameter = requerimientosAutor.HasValue ?
                new ObjectParameter("requerimientosAutor", requerimientosAutor) :
                new ObjectParameter("requerimientosAutor", typeof(bool));
    
            var revisionParameter = revision.HasValue ?
                new ObjectParameter("revision", revision) :
                new ObjectParameter("revision", typeof(bool));
    
            var reversadoParameter = reversado.HasValue ?
                new ObjectParameter("reversado", reversado) :
                new ObjectParameter("reversado", typeof(bool));
    
            var requerimientosAdminParameter = requerimientosAdmin.HasValue ?
                new ObjectParameter("requerimientosAdmin", requerimientosAdmin) :
                new ObjectParameter("requerimientosAdmin", typeof(bool));
    
            var resultadosParameter = resultados.HasValue ?
                new ObjectParameter("resultados", resultados) :
                new ObjectParameter("resultados", typeof(bool));
    
            var iniciarProcesoParameter = iniciarProceso.HasValue ?
                new ObjectParameter("iniciarProceso", iniciarProceso) :
                new ObjectParameter("iniciarProceso", typeof(bool));
    
            var asignarEvaluadoresParameter = asignarEvaluadores.HasValue ?
                new ObjectParameter("asignarEvaluadores", asignarEvaluadores) :
                new ObjectParameter("asignarEvaluadores", typeof(bool));
    
            var evaluacionParesParameter = evaluacionPares.HasValue ?
                new ObjectParameter("evaluacionPares", evaluacionPares) :
                new ObjectParameter("evaluacionPares", typeof(bool));
    
            var publicacionLibroParameter = publicacionLibro.HasValue ?
                new ObjectParameter("publicacionLibro", publicacionLibro) :
                new ObjectParameter("publicacionLibro", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarEstadoTiposProcesos", idestadoParameter, detalleParameter, requerimientosAutorParameter, revisionParameter, reversadoParameter, requerimientosAdminParameter, resultadosParameter, iniciarProcesoParameter, asignarEvaluadoresParameter, evaluacionParesParameter, publicacionLibroParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarEstadoTiposProcesos(Nullable<int> idestado)
        {
            var idestadoParameter = idestado.HasValue ?
                new ObjectParameter("idestado", idestado) :
                new ObjectParameter("idestado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarEstadoTiposProcesos", idestadoParameter);
        }
    
        public virtual ObjectResult<ListarEstadoTiposProcesos_Result> ListarEstadoTiposProcesos(Nullable<int> idtipoproceso)
        {
            var idtipoprocesoParameter = idtipoproceso.HasValue ?
                new ObjectParameter("idtipoproceso", idtipoproceso) :
                new ObjectParameter("idtipoproceso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarEstadoTiposProcesos_Result>("ListarEstadoTiposProcesos", idtipoprocesoParameter);
        }
    
        public virtual ObjectResult<ListarEstadoxDetalleRespuesta_Result> ListarEstadoxDetalleRespuesta(Nullable<int> idtipoproceso, string respconsulta)
        {
            var idtipoprocesoParameter = idtipoproceso.HasValue ?
                new ObjectParameter("idtipoproceso", idtipoproceso) :
                new ObjectParameter("idtipoproceso", typeof(int));
    
            var respconsultaParameter = respconsulta != null ?
                new ObjectParameter("respconsulta", respconsulta) :
                new ObjectParameter("respconsulta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarEstadoxDetalleRespuesta_Result>("ListarEstadoxDetalleRespuesta", idtipoprocesoParameter, respconsultaParameter);
        }
    
        public virtual ObjectResult<ListarEstadoxIdentificador_Result> ListarEstadoxIdentificador(Nullable<int> idtipoproceso, Nullable<int> identificador)
        {
            var idtipoprocesoParameter = idtipoproceso.HasValue ?
                new ObjectParameter("idtipoproceso", idtipoproceso) :
                new ObjectParameter("idtipoproceso", typeof(int));
    
            var identificadorParameter = identificador.HasValue ?
                new ObjectParameter("identificador", identificador) :
                new ObjectParameter("identificador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarEstadoxIdentificador_Result>("ListarEstadoxIdentificador", idtipoprocesoParameter, identificadorParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AsignarEvaluador(Nullable<int> iDlibro, Nullable<int> iDproceso, Nullable<int> iDevaluador, string estadoasignacion, Nullable<int> num)
        {
            var iDlibroParameter = iDlibro.HasValue ?
                new ObjectParameter("IDlibro", iDlibro) :
                new ObjectParameter("IDlibro", typeof(int));
    
            var iDprocesoParameter = iDproceso.HasValue ?
                new ObjectParameter("IDproceso", iDproceso) :
                new ObjectParameter("IDproceso", typeof(int));
    
            var iDevaluadorParameter = iDevaluador.HasValue ?
                new ObjectParameter("IDevaluador", iDevaluador) :
                new ObjectParameter("IDevaluador", typeof(int));
    
            var estadoasignacionParameter = estadoasignacion != null ?
                new ObjectParameter("estadoasignacion", estadoasignacion) :
                new ObjectParameter("estadoasignacion", typeof(string));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AsignarEvaluador", iDlibroParameter, iDprocesoParameter, iDevaluadorParameter, estadoasignacionParameter, numParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarEstadoAsignacionEvaluador(Nullable<int> iDproceso, Nullable<int> iDevaluador, string estadoasignacion)
        {
            var iDprocesoParameter = iDproceso.HasValue ?
                new ObjectParameter("IDproceso", iDproceso) :
                new ObjectParameter("IDproceso", typeof(int));
    
            var iDevaluadorParameter = iDevaluador.HasValue ?
                new ObjectParameter("IDevaluador", iDevaluador) :
                new ObjectParameter("IDevaluador", typeof(int));
    
            var estadoasignacionParameter = estadoasignacion != null ?
                new ObjectParameter("estadoasignacion", estadoasignacion) :
                new ObjectParameter("estadoasignacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarEstadoAsignacionEvaluador", iDprocesoParameter, iDevaluadorParameter, estadoasignacionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarEstadoAsignacionEvaluador2(Nullable<int> iDproceso, string estadoasignacion, Nullable<int> ida, Nullable<int> ide)
        {
            var iDprocesoParameter = iDproceso.HasValue ?
                new ObjectParameter("IDproceso", iDproceso) :
                new ObjectParameter("IDproceso", typeof(int));
    
            var estadoasignacionParameter = estadoasignacion != null ?
                new ObjectParameter("estadoasignacion", estadoasignacion) :
                new ObjectParameter("estadoasignacion", typeof(string));
    
            var idaParameter = ida.HasValue ?
                new ObjectParameter("Ida", ida) :
                new ObjectParameter("Ida", typeof(int));
    
            var ideParameter = ide.HasValue ?
                new ObjectParameter("Ide", ide) :
                new ObjectParameter("Ide", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarEstadoAsignacionEvaluador2", iDprocesoParameter, estadoasignacionParameter, idaParameter, ideParameter);
        }
    
        public virtual ObjectResult<ListarEvaluadores_Result> ListarEvaluadores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarEvaluadores_Result>("ListarEvaluadores");
        }
    
        public virtual ObjectResult<VerDetalleAsignacionEvaluador_Result> VerDetalleAsignacionEvaluador(Nullable<int> idproceso, Nullable<int> idevaluador)
        {
            var idprocesoParameter = idproceso.HasValue ?
                new ObjectParameter("idproceso", idproceso) :
                new ObjectParameter("idproceso", typeof(int));
    
            var idevaluadorParameter = idevaluador.HasValue ?
                new ObjectParameter("idevaluador", idevaluador) :
                new ObjectParameter("idevaluador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerDetalleAsignacionEvaluador_Result>("VerDetalleAsignacionEvaluador", idprocesoParameter, idevaluadorParameter);
        }
    
        public virtual ObjectResult<VerEvaluadores_Result> VerEvaluadores(Nullable<int> iDlibro)
        {
            var iDlibroParameter = iDlibro.HasValue ?
                new ObjectParameter("IDlibro", iDlibro) :
                new ObjectParameter("IDlibro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerEvaluadores_Result>("VerEvaluadores", iDlibroParameter);
        }
    
        public virtual ObjectResult<ConsultarFormato_Result> ConsultarFormato()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarFormato_Result>("ConsultarFormato");
        }
    
        public virtual ObjectResult<ConsultarTipoformatos_Result> ConsultarTipoformatos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarTipoformatos_Result>("ConsultarTipoformatos");
        }
    
        public virtual ObjectResult<Nullable<int>> EditarFormato(Nullable<int> idformato, string archivo, string detalleform, Nullable<int> idtipoform, string descripcion)
        {
            var idformatoParameter = idformato.HasValue ?
                new ObjectParameter("Idformato", idformato) :
                new ObjectParameter("Idformato", typeof(int));
    
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(string));
    
            var detalleformParameter = detalleform != null ?
                new ObjectParameter("Detalleform", detalleform) :
                new ObjectParameter("Detalleform", typeof(string));
    
            var idtipoformParameter = idtipoform.HasValue ?
                new ObjectParameter("Idtipoform", idtipoform) :
                new ObjectParameter("Idtipoform", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarFormato", idformatoParameter, archivoParameter, detalleformParameter, idtipoformParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarTipoformatos(Nullable<int> idtipoform, string detalletipoform)
        {
            var idtipoformParameter = idtipoform.HasValue ?
                new ObjectParameter("Idtipoform", idtipoform) :
                new ObjectParameter("Idtipoform", typeof(int));
    
            var detalletipoformParameter = detalletipoform != null ?
                new ObjectParameter("Detalletipoform", detalletipoform) :
                new ObjectParameter("Detalletipoform", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarTipoformatos", idtipoformParameter, detalletipoformParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarFormato(Nullable<int> idformato)
        {
            var idformatoParameter = idformato.HasValue ?
                new ObjectParameter("Idformato", idformato) :
                new ObjectParameter("Idformato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarFormato", idformatoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarTipoformatos(Nullable<int> idtipoform)
        {
            var idtipoformParameter = idtipoform.HasValue ?
                new ObjectParameter("Idtipoform", idtipoform) :
                new ObjectParameter("Idtipoform", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarTipoformatos", idtipoformParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RegistroFormato(string archivo, string detallearchivo, Nullable<int> idtipoformato, string descripcion)
        {
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(string));
    
            var detallearchivoParameter = detallearchivo != null ?
                new ObjectParameter("Detallearchivo", detallearchivo) :
                new ObjectParameter("Detallearchivo", typeof(string));
    
            var idtipoformatoParameter = idtipoformato.HasValue ?
                new ObjectParameter("Idtipoformato", idtipoformato) :
                new ObjectParameter("Idtipoformato", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RegistroFormato", archivoParameter, detallearchivoParameter, idtipoformatoParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> RegistroTipoformatos(string detalletipoform)
        {
            var detalletipoformParameter = detalletipoform != null ?
                new ObjectParameter("Detalletipoform", detalletipoform) :
                new ObjectParameter("Detalletipoform", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("RegistroTipoformatos", detalletipoformParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AgregarImagen(string detalleimg, Nullable<int> idnoticia)
        {
            var detalleimgParameter = detalleimg != null ?
                new ObjectParameter("detalleimg", detalleimg) :
                new ObjectParameter("detalleimg", typeof(string));
    
            var idnoticiaParameter = idnoticia.HasValue ?
                new ObjectParameter("idnoticia", idnoticia) :
                new ObjectParameter("idnoticia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AgregarImagen", detalleimgParameter, idnoticiaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarImagen(Nullable<int> idimg, string detalleimg)
        {
            var idimgParameter = idimg.HasValue ?
                new ObjectParameter("Idimg", idimg) :
                new ObjectParameter("Idimg", typeof(int));
    
            var detalleimgParameter = detalleimg != null ?
                new ObjectParameter("detalleimg", detalleimg) :
                new ObjectParameter("detalleimg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarImagen", idimgParameter, detalleimgParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarImagen(Nullable<int> idimg)
        {
            var idimgParameter = idimg.HasValue ?
                new ObjectParameter("Idimg", idimg) :
                new ObjectParameter("Idimg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarImagen", idimgParameter);
        }
    
        public virtual ObjectResult<ListarImagenesxIdnoticia_Result> ListarImagenesxIdnoticia(Nullable<int> idnoticia)
        {
            var idnoticiaParameter = idnoticia.HasValue ?
                new ObjectParameter("Idnoticia", idnoticia) :
                new ObjectParameter("Idnoticia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarImagenesxIdnoticia_Result>("ListarImagenesxIdnoticia", idnoticiaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AgregarInformacion(string tituloinfo, string enunciadoinfo, string imageninfo, string urlinfo, Nullable<int> pagina)
        {
            var tituloinfoParameter = tituloinfo != null ?
                new ObjectParameter("tituloinfo", tituloinfo) :
                new ObjectParameter("tituloinfo", typeof(string));
    
            var enunciadoinfoParameter = enunciadoinfo != null ?
                new ObjectParameter("enunciadoinfo", enunciadoinfo) :
                new ObjectParameter("enunciadoinfo", typeof(string));
    
            var imageninfoParameter = imageninfo != null ?
                new ObjectParameter("imageninfo", imageninfo) :
                new ObjectParameter("imageninfo", typeof(string));
    
            var urlinfoParameter = urlinfo != null ?
                new ObjectParameter("urlinfo", urlinfo) :
                new ObjectParameter("urlinfo", typeof(string));
    
            var paginaParameter = pagina.HasValue ?
                new ObjectParameter("pagina", pagina) :
                new ObjectParameter("pagina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AgregarInformacion", tituloinfoParameter, enunciadoinfoParameter, imageninfoParameter, urlinfoParameter, paginaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarInformacion(Nullable<int> idinfo, string tituloinfo, string enunciadoinfo, string imageninfo, string urlinfo, Nullable<int> pagina)
        {
            var idinfoParameter = idinfo.HasValue ?
                new ObjectParameter("Idinfo", idinfo) :
                new ObjectParameter("Idinfo", typeof(int));
    
            var tituloinfoParameter = tituloinfo != null ?
                new ObjectParameter("tituloinfo", tituloinfo) :
                new ObjectParameter("tituloinfo", typeof(string));
    
            var enunciadoinfoParameter = enunciadoinfo != null ?
                new ObjectParameter("enunciadoinfo", enunciadoinfo) :
                new ObjectParameter("enunciadoinfo", typeof(string));
    
            var imageninfoParameter = imageninfo != null ?
                new ObjectParameter("imageninfo", imageninfo) :
                new ObjectParameter("imageninfo", typeof(string));
    
            var urlinfoParameter = urlinfo != null ?
                new ObjectParameter("urlinfo", urlinfo) :
                new ObjectParameter("urlinfo", typeof(string));
    
            var paginaParameter = pagina.HasValue ?
                new ObjectParameter("pagina", pagina) :
                new ObjectParameter("pagina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarInformacion", idinfoParameter, tituloinfoParameter, enunciadoinfoParameter, imageninfoParameter, urlinfoParameter, paginaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarInformacionEditorial(Nullable<int> idinfo)
        {
            var idinfoParameter = idinfo.HasValue ?
                new ObjectParameter("Idinfo", idinfo) :
                new ObjectParameter("Idinfo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarInformacionEditorial", idinfoParameter);
        }
    
        public virtual ObjectResult<VerDetalleInformacionEditorial_Result> VerDetalleInformacionEditorial(Nullable<int> idinfo)
        {
            var idinfoParameter = idinfo.HasValue ?
                new ObjectParameter("Idinfo", idinfo) :
                new ObjectParameter("Idinfo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerDetalleInformacionEditorial_Result>("VerDetalleInformacionEditorial", idinfoParameter);
        }
    
        public virtual ObjectResult<VerInformacionEditorial_Result> VerInformacionEditorial()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerInformacionEditorial_Result>("VerInformacionEditorial");
        }
    
        public virtual ObjectResult<Nullable<int>> AceptaroDenegarLibro(Nullable<int> iDlibro, Nullable<int> aceptado, string fecha, Nullable<int> iduser)
        {
            var iDlibroParameter = iDlibro.HasValue ?
                new ObjectParameter("IDlibro", iDlibro) :
                new ObjectParameter("IDlibro", typeof(int));
    
            var aceptadoParameter = aceptado.HasValue ?
                new ObjectParameter("aceptado", aceptado) :
                new ObjectParameter("aceptado", typeof(int));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AceptaroDenegarLibro", iDlibroParameter, aceptadoParameter, fechaParameter, iduserParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AgregarLibroExterno(string titulo, string codigoISBN, string editorial, Nullable<int> idcategoria, string fechapublica, Nullable<int> idcarrera, string portada, string libro, string urlacceso, Nullable<System.DateTime> fechap)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var codigoISBNParameter = codigoISBN != null ?
                new ObjectParameter("CodigoISBN", codigoISBN) :
                new ObjectParameter("CodigoISBN", typeof(string));
    
            var editorialParameter = editorial != null ?
                new ObjectParameter("Editorial", editorial) :
                new ObjectParameter("Editorial", typeof(string));
    
            var idcategoriaParameter = idcategoria.HasValue ?
                new ObjectParameter("Idcategoria", idcategoria) :
                new ObjectParameter("Idcategoria", typeof(int));
    
            var fechapublicaParameter = fechapublica != null ?
                new ObjectParameter("Fechapublica", fechapublica) :
                new ObjectParameter("Fechapublica", typeof(string));
    
            var idcarreraParameter = idcarrera.HasValue ?
                new ObjectParameter("idcarrera", idcarrera) :
                new ObjectParameter("idcarrera", typeof(int));
    
            var portadaParameter = portada != null ?
                new ObjectParameter("Portada", portada) :
                new ObjectParameter("Portada", typeof(string));
    
            var libroParameter = libro != null ?
                new ObjectParameter("Libro", libro) :
                new ObjectParameter("Libro", typeof(string));
    
            var urlaccesoParameter = urlacceso != null ?
                new ObjectParameter("urlacceso", urlacceso) :
                new ObjectParameter("urlacceso", typeof(string));
    
            var fechapParameter = fechap.HasValue ?
                new ObjectParameter("fechap", fechap) :
                new ObjectParameter("fechap", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AgregarLibroExterno", tituloParameter, codigoISBNParameter, editorialParameter, idcategoriaParameter, fechapublicaParameter, idcarreraParameter, portadaParameter, libroParameter, urlaccesoParameter, fechapParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ArchivarLibro(Nullable<int> iDlibro)
        {
            var iDlibroParameter = iDlibro.HasValue ?
                new ObjectParameter("IDlibro", iDlibro) :
                new ObjectParameter("IDlibro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ArchivarLibro", iDlibroParameter);
        }
    
        public virtual ObjectResult<BusquedaLibrosAutores_Result> BusquedaLibrosAutores(string buscador)
        {
            var buscadorParameter = buscador != null ?
                new ObjectParameter("buscador", buscador) :
                new ObjectParameter("buscador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaLibrosAutores_Result>("BusquedaLibrosAutores", buscadorParameter);
        }
    
        public virtual ObjectResult<BusquedaLibrosCodigoISBN_Result> BusquedaLibrosCodigoISBN(string buscador)
        {
            var buscadorParameter = buscador != null ?
                new ObjectParameter("buscador", buscador) :
                new ObjectParameter("buscador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaLibrosCodigoISBN_Result>("BusquedaLibrosCodigoISBN", buscadorParameter);
        }
    
        public virtual ObjectResult<BusquedaLibrosTitulo_Result> BusquedaLibrosTitulo(string buscador)
        {
            var buscadorParameter = buscador != null ?
                new ObjectParameter("buscador", buscador) :
                new ObjectParameter("buscador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaLibrosTitulo_Result>("BusquedaLibrosTitulo", buscadorParameter);
        }
    
        public virtual ObjectResult<BusquedaLibrosTodoParametros_Result> BusquedaLibrosTodoParametros(string buscador, Nullable<int> idcarrera, Nullable<int> yearp, Nullable<int> idcate)
        {
            var buscadorParameter = buscador != null ?
                new ObjectParameter("buscador", buscador) :
                new ObjectParameter("buscador", typeof(string));
    
            var idcarreraParameter = idcarrera.HasValue ?
                new ObjectParameter("idcarrera", idcarrera) :
                new ObjectParameter("idcarrera", typeof(int));
    
            var yearpParameter = yearp.HasValue ?
                new ObjectParameter("yearp", yearp) :
                new ObjectParameter("yearp", typeof(int));
    
            var idcateParameter = idcate.HasValue ?
                new ObjectParameter("idcate", idcate) :
                new ObjectParameter("idcate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaLibrosTodoParametros_Result>("BusquedaLibrosTodoParametros", buscadorParameter, idcarreraParameter, yearpParameter, idcateParameter);
        }
    
        public virtual ObjectResult<BusquedaLibrosxCarrera_Result> BusquedaLibrosxCarrera(string buscador, Nullable<int> idcarrera)
        {
            var buscadorParameter = buscador != null ?
                new ObjectParameter("buscador", buscador) :
                new ObjectParameter("buscador", typeof(string));
    
            var idcarreraParameter = idcarrera.HasValue ?
                new ObjectParameter("idcarrera", idcarrera) :
                new ObjectParameter("idcarrera", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaLibrosxCarrera_Result>("BusquedaLibrosxCarrera", buscadorParameter, idcarreraParameter);
        }
    
        public virtual ObjectResult<BusquedaLibrosxCategoria_Result> BusquedaLibrosxCategoria(string buscador, Nullable<int> idcate)
        {
            var buscadorParameter = buscador != null ?
                new ObjectParameter("buscador", buscador) :
                new ObjectParameter("buscador", typeof(string));
    
            var idcateParameter = idcate.HasValue ?
                new ObjectParameter("idcate", idcate) :
                new ObjectParameter("idcate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaLibrosxCategoria_Result>("BusquedaLibrosxCategoria", buscadorParameter, idcateParameter);
        }
    
        public virtual ObjectResult<BusquedaLibrosYearPublicacion_Result> BusquedaLibrosYearPublicacion(string buscador, Nullable<int> yearp)
        {
            var buscadorParameter = buscador != null ?
                new ObjectParameter("buscador", buscador) :
                new ObjectParameter("buscador", typeof(string));
    
            var yearpParameter = yearp.HasValue ?
                new ObjectParameter("yearp", yearp) :
                new ObjectParameter("yearp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaLibrosYearPublicacion_Result>("BusquedaLibrosYearPublicacion", buscadorParameter, yearpParameter);
        }
    
        public virtual ObjectResult<CrearCitaLibro_Result> CrearCitaLibro(Nullable<int> idlibro)
        {
            var idlibroParameter = idlibro.HasValue ?
                new ObjectParameter("idlibro", idlibro) :
                new ObjectParameter("idlibro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CrearCitaLibro_Result>("CrearCitaLibro", idlibroParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CrearLibro(Nullable<int> iduser, string tituloLib, string procesoL, Nullable<int> progresoL, string actualizadoL, string fechacreado, string estadoL, Nullable<int> aceptado)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            var tituloLibParameter = tituloLib != null ?
                new ObjectParameter("TituloLib", tituloLib) :
                new ObjectParameter("TituloLib", typeof(string));
    
            var procesoLParameter = procesoL != null ?
                new ObjectParameter("procesoL", procesoL) :
                new ObjectParameter("procesoL", typeof(string));
    
            var progresoLParameter = progresoL.HasValue ?
                new ObjectParameter("progresoL", progresoL) :
                new ObjectParameter("progresoL", typeof(int));
    
            var actualizadoLParameter = actualizadoL != null ?
                new ObjectParameter("actualizadoL", actualizadoL) :
                new ObjectParameter("actualizadoL", typeof(string));
    
            var fechacreadoParameter = fechacreado != null ?
                new ObjectParameter("fechacreado", fechacreado) :
                new ObjectParameter("fechacreado", typeof(string));
    
            var estadoLParameter = estadoL != null ?
                new ObjectParameter("estadoL", estadoL) :
                new ObjectParameter("estadoL", typeof(string));
    
            var aceptadoParameter = aceptado.HasValue ?
                new ObjectParameter("aceptado", aceptado) :
                new ObjectParameter("aceptado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CrearLibro", iduserParameter, tituloLibParameter, procesoLParameter, progresoLParameter, actualizadoLParameter, fechacreadoParameter, estadoLParameter, aceptadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarLibro(Nullable<int> iDlibro, string procesoL, Nullable<int> progresoL, string actualizadoL, string estadoL, Nullable<int> idprocesoL, Nullable<bool> estado)
        {
            var iDlibroParameter = iDlibro.HasValue ?
                new ObjectParameter("IDlibro", iDlibro) :
                new ObjectParameter("IDlibro", typeof(int));
    
            var procesoLParameter = procesoL != null ?
                new ObjectParameter("procesoL", procesoL) :
                new ObjectParameter("procesoL", typeof(string));
    
            var progresoLParameter = progresoL.HasValue ?
                new ObjectParameter("progresoL", progresoL) :
                new ObjectParameter("progresoL", typeof(int));
    
            var actualizadoLParameter = actualizadoL != null ?
                new ObjectParameter("actualizadoL", actualizadoL) :
                new ObjectParameter("actualizadoL", typeof(string));
    
            var estadoLParameter = estadoL != null ?
                new ObjectParameter("estadoL", estadoL) :
                new ObjectParameter("estadoL", typeof(string));
    
            var idprocesoLParameter = idprocesoL.HasValue ?
                new ObjectParameter("IdprocesoL", idprocesoL) :
                new ObjectParameter("IdprocesoL", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarLibro", iDlibroParameter, procesoLParameter, progresoLParameter, actualizadoLParameter, estadoLParameter, idprocesoLParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarLibroExterno(Nullable<int> idlibro, string titulo, string codigoISBN, string editorial, Nullable<int> idcategoria, string fechapublica, Nullable<int> idcarrera, string portada, string libro, string urlacceso, Nullable<System.DateTime> fechap)
        {
            var idlibroParameter = idlibro.HasValue ?
                new ObjectParameter("Idlibro", idlibro) :
                new ObjectParameter("Idlibro", typeof(int));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var codigoISBNParameter = codigoISBN != null ?
                new ObjectParameter("CodigoISBN", codigoISBN) :
                new ObjectParameter("CodigoISBN", typeof(string));
    
            var editorialParameter = editorial != null ?
                new ObjectParameter("Editorial", editorial) :
                new ObjectParameter("Editorial", typeof(string));
    
            var idcategoriaParameter = idcategoria.HasValue ?
                new ObjectParameter("Idcategoria", idcategoria) :
                new ObjectParameter("Idcategoria", typeof(int));
    
            var fechapublicaParameter = fechapublica != null ?
                new ObjectParameter("Fechapublica", fechapublica) :
                new ObjectParameter("Fechapublica", typeof(string));
    
            var idcarreraParameter = idcarrera.HasValue ?
                new ObjectParameter("idcarrera", idcarrera) :
                new ObjectParameter("idcarrera", typeof(int));
    
            var portadaParameter = portada != null ?
                new ObjectParameter("Portada", portada) :
                new ObjectParameter("Portada", typeof(string));
    
            var libroParameter = libro != null ?
                new ObjectParameter("Libro", libro) :
                new ObjectParameter("Libro", typeof(string));
    
            var urlaccesoParameter = urlacceso != null ?
                new ObjectParameter("urlacceso", urlacceso) :
                new ObjectParameter("urlacceso", typeof(string));
    
            var fechapParameter = fechap.HasValue ?
                new ObjectParameter("fechap", fechap) :
                new ObjectParameter("fechap", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarLibroExterno", idlibroParameter, tituloParameter, codigoISBNParameter, editorialParameter, idcategoriaParameter, fechapublicaParameter, idcarreraParameter, portadaParameter, libroParameter, urlaccesoParameter, fechapParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarTituloLibro(Nullable<int> iDlibro, string titulo)
        {
            var iDlibroParameter = iDlibro.HasValue ?
                new ObjectParameter("IDlibro", iDlibro) :
                new ObjectParameter("IDlibro", typeof(int));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarTituloLibro", iDlibroParameter, tituloParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarLibro(Nullable<int> iDlibro, Nullable<int> iduser)
        {
            var iDlibroParameter = iDlibro.HasValue ?
                new ObjectParameter("IDlibro", iDlibro) :
                new ObjectParameter("IDlibro", typeof(int));
    
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarLibro", iDlibroParameter, iduserParameter);
        }
    
        public virtual ObjectResult<ListarLibrosxIdUsuario_Result> ListarLibrosxIdUsuario(Nullable<int> iduser)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarLibrosxIdUsuario_Result>("ListarLibrosxIdUsuario", iduserParameter);
        }
    
        public virtual ObjectResult<MostrarLibrosxCarrera_Result> MostrarLibrosxCarrera(Nullable<int> idcarrera)
        {
            var idcarreraParameter = idcarrera.HasValue ?
                new ObjectParameter("idcarrera", idcarrera) :
                new ObjectParameter("idcarrera", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MostrarLibrosxCarrera_Result>("MostrarLibrosxCarrera", idcarreraParameter);
        }
    
        public virtual ObjectResult<MostrarLibrosxCarreraPeriodo_Result> MostrarLibrosxCarreraPeriodo(Nullable<int> idpe, Nullable<int> idc)
        {
            var idpeParameter = idpe.HasValue ?
                new ObjectParameter("idpe", idpe) :
                new ObjectParameter("idpe", typeof(int));
    
            var idcParameter = idc.HasValue ?
                new ObjectParameter("idc", idc) :
                new ObjectParameter("idc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MostrarLibrosxCarreraPeriodo_Result>("MostrarLibrosxCarreraPeriodo", idpeParameter, idcParameter);
        }
    
        public virtual ObjectResult<MostrarLibrosxCarreraYear_Result> MostrarLibrosxCarreraYear(Nullable<int> idc, Nullable<int> yearp)
        {
            var idcParameter = idc.HasValue ?
                new ObjectParameter("idc", idc) :
                new ObjectParameter("idc", typeof(int));
    
            var yearpParameter = yearp.HasValue ?
                new ObjectParameter("yearp", yearp) :
                new ObjectParameter("yearp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MostrarLibrosxCarreraYear_Result>("MostrarLibrosxCarreraYear", idcParameter, yearpParameter);
        }
    
        public virtual ObjectResult<MostrarLibrosxCategoria_Result> MostrarLibrosxCategoria(Nullable<int> idcate)
        {
            var idcateParameter = idcate.HasValue ?
                new ObjectParameter("idcate", idcate) :
                new ObjectParameter("idcate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MostrarLibrosxCategoria_Result>("MostrarLibrosxCategoria", idcateParameter);
        }
    
        public virtual ObjectResult<MostrarLibrosxPeriodo_Result> MostrarLibrosxPeriodo(Nullable<int> idpe)
        {
            var idpeParameter = idpe.HasValue ?
                new ObjectParameter("idpe", idpe) :
                new ObjectParameter("idpe", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MostrarLibrosxPeriodo_Result>("MostrarLibrosxPeriodo", idpeParameter);
        }
    
        public virtual ObjectResult<MostrarLibrosxYear_Result> MostrarLibrosxYear(Nullable<int> yearp)
        {
            var yearpParameter = yearp.HasValue ?
                new ObjectParameter("yearp", yearp) :
                new ObjectParameter("yearp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MostrarLibrosxYear_Result>("MostrarLibrosxYear", yearpParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RegistroVistasLibro(string ip, Nullable<System.DateTime> fechavistas, Nullable<int> idlibro)
        {
            var ipParameter = ip != null ?
                new ObjectParameter("ip", ip) :
                new ObjectParameter("ip", typeof(string));
    
            var fechavistasParameter = fechavistas.HasValue ?
                new ObjectParameter("fechavistas", fechavistas) :
                new ObjectParameter("fechavistas", typeof(System.DateTime));
    
            var idlibroParameter = idlibro.HasValue ?
                new ObjectParameter("idlibro", idlibro) :
                new ObjectParameter("idlibro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RegistroVistasLibro", ipParameter, fechavistasParameter, idlibroParameter);
        }
    
        public virtual ObjectResult<VerDetalleLibro_Result> VerDetalleLibro(Nullable<int> iDlibro)
        {
            var iDlibroParameter = iDlibro.HasValue ?
                new ObjectParameter("IDlibro", iDlibro) :
                new ObjectParameter("IDlibro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerDetalleLibro_Result>("VerDetalleLibro", iDlibroParameter);
        }
    
        public virtual ObjectResult<VerDetalleLibroExterno_Result> VerDetalleLibroExterno(Nullable<int> iDlibro)
        {
            var iDlibroParameter = iDlibro.HasValue ?
                new ObjectParameter("IDlibro", iDlibro) :
                new ObjectParameter("IDlibro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerDetalleLibroExterno_Result>("VerDetalleLibroExterno", iDlibroParameter);
        }
    
        public virtual ObjectResult<VerLibrosArchivados_Result> VerLibrosArchivados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerLibrosArchivados_Result>("VerLibrosArchivados");
        }
    
        public virtual ObjectResult<VerLibrosArchivadosAutor_Result> VerLibrosArchivadosAutor(Nullable<int> iduser)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerLibrosArchivadosAutor_Result>("VerLibrosArchivadosAutor", iduserParameter);
        }
    
        public virtual ObjectResult<VerLibrosEnProceso_Result> VerLibrosEnProceso()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerLibrosEnProceso_Result>("VerLibrosEnProceso");
        }
    
        public virtual ObjectResult<VerLibrosEvaluar_Result> VerLibrosEvaluar(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerLibrosEvaluar_Result>("VerLibrosEvaluar", idParameter);
        }
    
        public virtual ObjectResult<VerLibrosPopulares_Result> VerLibrosPopulares()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerLibrosPopulares_Result>("VerLibrosPopulares");
        }
    
        public virtual ObjectResult<VerLibrosRecientes_Result> VerLibrosRecientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerLibrosRecientes_Result>("VerLibrosRecientes");
        }
    
        public virtual ObjectResult<VerLibrosTopRecientes_Result> VerLibrosTopRecientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerLibrosTopRecientes_Result>("VerLibrosTopRecientes");
        }
    
        public virtual ObjectResult<VerSolicitudesLibros_Result> VerSolicitudesLibros()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerSolicitudesLibros_Result>("VerSolicitudesLibros");
        }
    
        public virtual ObjectResult<VerTodosLosLibros_Result> VerTodosLosLibros()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerTodosLosLibros_Result>("VerTodosLosLibros");
        }
    
        public virtual ObjectResult<Nullable<int>> AgregarMensajeEstadoTiposProcesos(Nullable<int> idestado, string descripcion, string visible)
        {
            var idestadoParameter = idestado.HasValue ?
                new ObjectParameter("idestado", idestado) :
                new ObjectParameter("idestado", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var visibleParameter = visible != null ?
                new ObjectParameter("visible", visible) :
                new ObjectParameter("visible", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AgregarMensajeEstadoTiposProcesos", idestadoParameter, descripcionParameter, visibleParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarMensajeEstadoTiposProcesos(Nullable<int> idmensaje, string descripcion, string visible)
        {
            var idmensajeParameter = idmensaje.HasValue ?
                new ObjectParameter("idmensaje", idmensaje) :
                new ObjectParameter("idmensaje", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var visibleParameter = visible != null ?
                new ObjectParameter("visible", visible) :
                new ObjectParameter("visible", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarMensajeEstadoTiposProcesos", idmensajeParameter, descripcionParameter, visibleParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarMensajeEstadoTiposProcesos(Nullable<int> idmensaje)
        {
            var idmensajeParameter = idmensaje.HasValue ?
                new ObjectParameter("idmensaje", idmensaje) :
                new ObjectParameter("idmensaje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarMensajeEstadoTiposProcesos", idmensajeParameter);
        }
    
        public virtual ObjectResult<ListarMensajeEstadoTiposProcesos_Result> ListarMensajeEstadoTiposProcesos(Nullable<int> idestado)
        {
            var idestadoParameter = idestado.HasValue ?
                new ObjectParameter("idestado", idestado) :
                new ObjectParameter("idestado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarMensajeEstadoTiposProcesos_Result>("ListarMensajeEstadoTiposProcesos", idestadoParameter);
        }
    
        public virtual ObjectResult<VerMensajeEstadoProceso_Result> VerMensajeEstadoProceso(Nullable<int> idestado, Nullable<int> idtipoproceso, string visible)
        {
            var idestadoParameter = idestado.HasValue ?
                new ObjectParameter("idestado", idestado) :
                new ObjectParameter("idestado", typeof(int));
    
            var idtipoprocesoParameter = idtipoproceso.HasValue ?
                new ObjectParameter("idtipoproceso", idtipoproceso) :
                new ObjectParameter("idtipoproceso", typeof(int));
    
            var visibleParameter = visible != null ?
                new ObjectParameter("visible", visible) :
                new ObjectParameter("visible", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerMensajeEstadoProceso_Result>("VerMensajeEstadoProceso", idestadoParameter, idtipoprocesoParameter, visibleParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AgregarNoticia(string detalleNoticia, string descripcionNoticia, string imagennoticia, string titulonoticia)
        {
            var detalleNoticiaParameter = detalleNoticia != null ?
                new ObjectParameter("detalleNoticia", detalleNoticia) :
                new ObjectParameter("detalleNoticia", typeof(string));
    
            var descripcionNoticiaParameter = descripcionNoticia != null ?
                new ObjectParameter("descripcionNoticia", descripcionNoticia) :
                new ObjectParameter("descripcionNoticia", typeof(string));
    
            var imagennoticiaParameter = imagennoticia != null ?
                new ObjectParameter("imagennoticia", imagennoticia) :
                new ObjectParameter("imagennoticia", typeof(string));
    
            var titulonoticiaParameter = titulonoticia != null ?
                new ObjectParameter("titulonoticia", titulonoticia) :
                new ObjectParameter("titulonoticia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AgregarNoticia", detalleNoticiaParameter, descripcionNoticiaParameter, imagennoticiaParameter, titulonoticiaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarNoticia(Nullable<int> idnoticia, string detalleNoticia, string descripcionNoticia, string imagennoticia, string titulonoticia)
        {
            var idnoticiaParameter = idnoticia.HasValue ?
                new ObjectParameter("Idnoticia", idnoticia) :
                new ObjectParameter("Idnoticia", typeof(int));
    
            var detalleNoticiaParameter = detalleNoticia != null ?
                new ObjectParameter("detalleNoticia", detalleNoticia) :
                new ObjectParameter("detalleNoticia", typeof(string));
    
            var descripcionNoticiaParameter = descripcionNoticia != null ?
                new ObjectParameter("descripcionNoticia", descripcionNoticia) :
                new ObjectParameter("descripcionNoticia", typeof(string));
    
            var imagennoticiaParameter = imagennoticia != null ?
                new ObjectParameter("imagennoticia", imagennoticia) :
                new ObjectParameter("imagennoticia", typeof(string));
    
            var titulonoticiaParameter = titulonoticia != null ?
                new ObjectParameter("titulonoticia", titulonoticia) :
                new ObjectParameter("titulonoticia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarNoticia", idnoticiaParameter, detalleNoticiaParameter, descripcionNoticiaParameter, imagennoticiaParameter, titulonoticiaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarNoticia(Nullable<int> idnoticia)
        {
            var idnoticiaParameter = idnoticia.HasValue ?
                new ObjectParameter("Idnoticia", idnoticia) :
                new ObjectParameter("Idnoticia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarNoticia", idnoticiaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PublicarNoticia(Nullable<int> idnoticia, string fecha, Nullable<System.DateTime> fechap, string urlacceso)
        {
            var idnoticiaParameter = idnoticia.HasValue ?
                new ObjectParameter("Idnoticia", idnoticia) :
                new ObjectParameter("Idnoticia", typeof(int));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var fechapParameter = fechap.HasValue ?
                new ObjectParameter("fechap", fechap) :
                new ObjectParameter("fechap", typeof(System.DateTime));
    
            var urlaccesoParameter = urlacceso != null ?
                new ObjectParameter("urlacceso", urlacceso) :
                new ObjectParameter("urlacceso", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PublicarNoticia", idnoticiaParameter, fechaParameter, fechapParameter, urlaccesoParameter);
        }
    
        public virtual ObjectResult<VerDetalleNoticia_Result> VerDetalleNoticia(Nullable<int> idnoticia)
        {
            var idnoticiaParameter = idnoticia.HasValue ?
                new ObjectParameter("Idnoticia", idnoticia) :
                new ObjectParameter("Idnoticia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerDetalleNoticia_Result>("VerDetalleNoticia", idnoticiaParameter);
        }
    
        public virtual ObjectResult<VerNoticias_Result> VerNoticias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerNoticias_Result>("VerNoticias");
        }
    
        public virtual ObjectResult<Nullable<int>> CambiarEstadoNotificacion(Nullable<int> iduser)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CambiarEstadoNotificacion", iduserParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CrearNotificacion(string notificacion, string urlnotificacion, string visible, Nullable<int> iduser, Nullable<int> idtipo, string fecha, string detallenotificacion, Nullable<bool> general)
        {
            var notificacionParameter = notificacion != null ?
                new ObjectParameter("notificacion", notificacion) :
                new ObjectParameter("notificacion", typeof(string));
    
            var urlnotificacionParameter = urlnotificacion != null ?
                new ObjectParameter("urlnotificacion", urlnotificacion) :
                new ObjectParameter("urlnotificacion", typeof(string));
    
            var visibleParameter = visible != null ?
                new ObjectParameter("visible", visible) :
                new ObjectParameter("visible", typeof(string));
    
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(int));
    
            var idtipoParameter = idtipo.HasValue ?
                new ObjectParameter("idtipo", idtipo) :
                new ObjectParameter("idtipo", typeof(int));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var detallenotificacionParameter = detallenotificacion != null ?
                new ObjectParameter("detallenotificacion", detallenotificacion) :
                new ObjectParameter("detallenotificacion", typeof(string));
    
            var generalParameter = general.HasValue ?
                new ObjectParameter("general", general) :
                new ObjectParameter("general", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CrearNotificacion", notificacionParameter, urlnotificacionParameter, visibleParameter, iduserParameter, idtipoParameter, fechaParameter, detallenotificacionParameter, generalParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarNotificacion(Nullable<int> idnoti, string notificacion, string urlnotificacion, string visible, Nullable<int> iduser, Nullable<int> idtipo, string fecha, string detallenotificacion, Nullable<bool> general)
        {
            var idnotiParameter = idnoti.HasValue ?
                new ObjectParameter("Idnoti", idnoti) :
                new ObjectParameter("Idnoti", typeof(int));
    
            var notificacionParameter = notificacion != null ?
                new ObjectParameter("notificacion", notificacion) :
                new ObjectParameter("notificacion", typeof(string));
    
            var urlnotificacionParameter = urlnotificacion != null ?
                new ObjectParameter("urlnotificacion", urlnotificacion) :
                new ObjectParameter("urlnotificacion", typeof(string));
    
            var visibleParameter = visible != null ?
                new ObjectParameter("visible", visible) :
                new ObjectParameter("visible", typeof(string));
    
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(int));
    
            var idtipoParameter = idtipo.HasValue ?
                new ObjectParameter("idtipo", idtipo) :
                new ObjectParameter("idtipo", typeof(int));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var detallenotificacionParameter = detallenotificacion != null ?
                new ObjectParameter("detallenotificacion", detallenotificacion) :
                new ObjectParameter("detallenotificacion", typeof(string));
    
            var generalParameter = general.HasValue ?
                new ObjectParameter("general", general) :
                new ObjectParameter("general", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarNotificacion", idnotiParameter, notificacionParameter, urlnotificacionParameter, visibleParameter, iduserParameter, idtipoParameter, fechaParameter, detallenotificacionParameter, generalParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarNotificacion(Nullable<int> idnotifi)
        {
            var idnotifiParameter = idnotifi.HasValue ?
                new ObjectParameter("Idnotifi", idnotifi) :
                new ObjectParameter("Idnotifi", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarNotificacion", idnotifiParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarTodoNotificaciones(Nullable<int> iduser)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarTodoNotificaciones", iduserParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PublicarNotificacion(Nullable<int> idnoti, string visible)
        {
            var idnotiParameter = idnoti.HasValue ?
                new ObjectParameter("idnoti", idnoti) :
                new ObjectParameter("idnoti", typeof(int));
    
            var visibleParameter = visible != null ?
                new ObjectParameter("visible", visible) :
                new ObjectParameter("visible", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PublicarNotificacion", idnotiParameter, visibleParameter);
        }
    
        public virtual ObjectResult<VerNotificacionesRegistradas_Result> VerNotificacionesRegistradas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerNotificacionesRegistradas_Result>("VerNotificacionesRegistradas");
        }
    
        public virtual ObjectResult<VerNotificacionesxIduser_Result> VerNotificacionesxIduser(Nullable<int> iduser)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerNotificacionesxIduser_Result>("VerNotificacionesxIduser", iduserParameter);
        }
    
        public virtual ObjectResult<VerTiposNotificaciones_Result> VerTiposNotificaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerTiposNotificaciones_Result>("VerTiposNotificaciones");
        }
    
        public virtual ObjectResult<VerTodoNotificacionesxIduser_Result> VerTodoNotificacionesxIduser(Nullable<int> iduser)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerTodoNotificacionesxIduser_Result>("VerTodoNotificacionesxIduser", iduserParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AgregarObservacion(Nullable<int> idproceso, string observacion, string detalle, string emisor, string titulo, string fecha, Nullable<bool> visible, string estado, Nullable<int> idemisor, Nullable<bool> respuesta, Nullable<int> idreq, Nullable<bool> obligatoria)
        {
            var idprocesoParameter = idproceso.HasValue ?
                new ObjectParameter("Idproceso", idproceso) :
                new ObjectParameter("Idproceso", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("observacion", observacion) :
                new ObjectParameter("observacion", typeof(string));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("Detalle", detalle) :
                new ObjectParameter("Detalle", typeof(string));
    
            var emisorParameter = emisor != null ?
                new ObjectParameter("emisor", emisor) :
                new ObjectParameter("emisor", typeof(string));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var visibleParameter = visible.HasValue ?
                new ObjectParameter("visible", visible) :
                new ObjectParameter("visible", typeof(bool));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var idemisorParameter = idemisor.HasValue ?
                new ObjectParameter("idemisor", idemisor) :
                new ObjectParameter("idemisor", typeof(int));
    
            var respuestaParameter = respuesta.HasValue ?
                new ObjectParameter("respuesta", respuesta) :
                new ObjectParameter("respuesta", typeof(bool));
    
            var idreqParameter = idreq.HasValue ?
                new ObjectParameter("idreq", idreq) :
                new ObjectParameter("idreq", typeof(int));
    
            var obligatoriaParameter = obligatoria.HasValue ?
                new ObjectParameter("obligatoria", obligatoria) :
                new ObjectParameter("obligatoria", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AgregarObservacion", idprocesoParameter, observacionParameter, detalleParameter, emisorParameter, tituloParameter, fechaParameter, visibleParameter, estadoParameter, idemisorParameter, respuestaParameter, idreqParameter, obligatoriaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarEstadoObservacionesEnviadas(Nullable<int> idemisor, Nullable<int> idproce, string estadoconsulta, string estadoedit)
        {
            var idemisorParameter = idemisor.HasValue ?
                new ObjectParameter("idemisor", idemisor) :
                new ObjectParameter("idemisor", typeof(int));
    
            var idproceParameter = idproce.HasValue ?
                new ObjectParameter("Idproce", idproce) :
                new ObjectParameter("Idproce", typeof(int));
    
            var estadoconsultaParameter = estadoconsulta != null ?
                new ObjectParameter("estadoconsulta", estadoconsulta) :
                new ObjectParameter("estadoconsulta", typeof(string));
    
            var estadoeditParameter = estadoedit != null ?
                new ObjectParameter("estadoedit", estadoedit) :
                new ObjectParameter("estadoedit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarEstadoObservacionesEnviadas", idemisorParameter, idproceParameter, estadoconsultaParameter, estadoeditParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarObservacion(Nullable<int> idobservacion)
        {
            var idobservacionParameter = idobservacion.HasValue ?
                new ObjectParameter("Idobservacion", idobservacion) :
                new ObjectParameter("Idobservacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarObservacion", idobservacionParameter);
        }
    
        public virtual ObjectResult<VerObservaciones_Result> VerObservaciones(Nullable<int> idproceso)
        {
            var idprocesoParameter = idproceso.HasValue ?
                new ObjectParameter("Idproceso", idproceso) :
                new ObjectParameter("Idproceso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerObservaciones_Result>("VerObservaciones", idprocesoParameter);
        }
    
        public virtual ObjectResult<VerObservacionesEnviadas_Result> VerObservacionesEnviadas(Nullable<int> idproceso, Nullable<int> idemisor)
        {
            var idprocesoParameter = idproceso.HasValue ?
                new ObjectParameter("Idproceso", idproceso) :
                new ObjectParameter("Idproceso", typeof(int));
    
            var idemisorParameter = idemisor.HasValue ?
                new ObjectParameter("idemisor", idemisor) :
                new ObjectParameter("idemisor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerObservacionesEnviadas_Result>("VerObservacionesEnviadas", idprocesoParameter, idemisorParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarPeriodo(Nullable<int> id, string detalleperiodo, Nullable<System.DateTime> fechainicio, Nullable<System.DateTime> fechafin)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var detalleperiodoParameter = detalleperiodo != null ?
                new ObjectParameter("detalleperiodo", detalleperiodo) :
                new ObjectParameter("detalleperiodo", typeof(string));
    
            var fechainicioParameter = fechainicio.HasValue ?
                new ObjectParameter("fechainicio", fechainicio) :
                new ObjectParameter("fechainicio", typeof(System.DateTime));
    
            var fechafinParameter = fechafin.HasValue ?
                new ObjectParameter("fechafin", fechafin) :
                new ObjectParameter("fechafin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarPeriodo", idParameter, detalleperiodoParameter, fechainicioParameter, fechafinParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarPeriodo(Nullable<int> idperiodo)
        {
            var idperiodoParameter = idperiodo.HasValue ?
                new ObjectParameter("idperiodo", idperiodo) :
                new ObjectParameter("idperiodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarPeriodo", idperiodoParameter);
        }
    
        public virtual ObjectResult<ListarPeriodos_Result> ListarPeriodos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarPeriodos_Result>("ListarPeriodos");
        }
    
        public virtual ObjectResult<ListarYearPeriodo_Result> ListarYearPeriodo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarYearPeriodo_Result>("ListarYearPeriodo");
        }
    
        public virtual ObjectResult<Nullable<int>> RegistroPeriodo(string detalleperiodo, Nullable<int> ordenperiodo, Nullable<System.DateTime> fechainicio, Nullable<System.DateTime> fechafin, Nullable<int> ident)
        {
            var detalleperiodoParameter = detalleperiodo != null ?
                new ObjectParameter("detalleperiodo", detalleperiodo) :
                new ObjectParameter("detalleperiodo", typeof(string));
    
            var ordenperiodoParameter = ordenperiodo.HasValue ?
                new ObjectParameter("ordenperiodo", ordenperiodo) :
                new ObjectParameter("ordenperiodo", typeof(int));
    
            var fechainicioParameter = fechainicio.HasValue ?
                new ObjectParameter("fechainicio", fechainicio) :
                new ObjectParameter("fechainicio", typeof(System.DateTime));
    
            var fechafinParameter = fechafin.HasValue ?
                new ObjectParameter("fechafin", fechafin) :
                new ObjectParameter("fechafin", typeof(System.DateTime));
    
            var identParameter = ident.HasValue ?
                new ObjectParameter("ident", ident) :
                new ObjectParameter("ident", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RegistroPeriodo", detalleperiodoParameter, ordenperiodoParameter, fechainicioParameter, fechafinParameter, identParameter);
        }
    
        public virtual ObjectResult<ConsultarOpcionesRespuestaPreguntaSeleccion_Result> ConsultarOpcionesRespuestaPreguntaSeleccion(Nullable<int> idcuestionario)
        {
            var idcuestionarioParameter = idcuestionario.HasValue ?
                new ObjectParameter("Idcuestionario", idcuestionario) :
                new ObjectParameter("Idcuestionario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarOpcionesRespuestaPreguntaSeleccion_Result>("ConsultarOpcionesRespuestaPreguntaSeleccion", idcuestionarioParameter);
        }
    
        public virtual ObjectResult<ConsultarPreguntaAbierta_Result> ConsultarPreguntaAbierta(Nullable<int> idcuestionario)
        {
            var idcuestionarioParameter = idcuestionario.HasValue ?
                new ObjectParameter("Idcuestionario", idcuestionario) :
                new ObjectParameter("Idcuestionario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarPreguntaAbierta_Result>("ConsultarPreguntaAbierta", idcuestionarioParameter);
        }
    
        public virtual ObjectResult<ConsultarPreguntaObservaciones_Result> ConsultarPreguntaObservaciones(Nullable<int> idcuestionario)
        {
            var idcuestionarioParameter = idcuestionario.HasValue ?
                new ObjectParameter("Idcuestionario", idcuestionario) :
                new ObjectParameter("Idcuestionario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarPreguntaObservaciones_Result>("ConsultarPreguntaObservaciones", idcuestionarioParameter);
        }
    
        public virtual ObjectResult<ConsultarPreguntas_Result> ConsultarPreguntas(Nullable<int> idcuestionario)
        {
            var idcuestionarioParameter = idcuestionario.HasValue ?
                new ObjectParameter("Idcuestionario", idcuestionario) :
                new ObjectParameter("Idcuestionario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarPreguntas_Result>("ConsultarPreguntas", idcuestionarioParameter);
        }
    
        public virtual ObjectResult<ConsultarPreguntaSeleccion_Result> ConsultarPreguntaSeleccion(Nullable<int> idcuestionario)
        {
            var idcuestionarioParameter = idcuestionario.HasValue ?
                new ObjectParameter("Idcuestionario", idcuestionario) :
                new ObjectParameter("Idcuestionario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarPreguntaSeleccion_Result>("ConsultarPreguntaSeleccion", idcuestionarioParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarOpcionPreguntaSeleccion(Nullable<int> idopcion, string descripcionop)
        {
            var idopcionParameter = idopcion.HasValue ?
                new ObjectParameter("Idopcion", idopcion) :
                new ObjectParameter("Idopcion", typeof(int));
    
            var descripcionopParameter = descripcionop != null ?
                new ObjectParameter("descripcionop", descripcionop) :
                new ObjectParameter("descripcionop", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarOpcionPreguntaSeleccion", idopcionParameter, descripcionopParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarOpcionRespuestaPreguntaSeleccion(Nullable<int> idopresp, string descripcionopresp)
        {
            var idoprespParameter = idopresp.HasValue ?
                new ObjectParameter("Idopresp", idopresp) :
                new ObjectParameter("Idopresp", typeof(int));
    
            var descripcionoprespParameter = descripcionopresp != null ?
                new ObjectParameter("descripcionopresp", descripcionopresp) :
                new ObjectParameter("descripcionopresp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarOpcionRespuestaPreguntaSeleccion", idoprespParameter, descripcionoprespParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarPregunta(Nullable<int> idpreg, Nullable<int> idc, Nullable<int> idtipopreg, string descripcionpreg, Nullable<bool> obligatorio, string leyendasup, string tiposopciones)
        {
            var idpregParameter = idpreg.HasValue ?
                new ObjectParameter("Idpreg", idpreg) :
                new ObjectParameter("Idpreg", typeof(int));
    
            var idcParameter = idc.HasValue ?
                new ObjectParameter("Idc", idc) :
                new ObjectParameter("Idc", typeof(int));
    
            var idtipopregParameter = idtipopreg.HasValue ?
                new ObjectParameter("Idtipopreg", idtipopreg) :
                new ObjectParameter("Idtipopreg", typeof(int));
    
            var descripcionpregParameter = descripcionpreg != null ?
                new ObjectParameter("descripcionpreg", descripcionpreg) :
                new ObjectParameter("descripcionpreg", typeof(string));
    
            var obligatorioParameter = obligatorio.HasValue ?
                new ObjectParameter("obligatorio", obligatorio) :
                new ObjectParameter("obligatorio", typeof(bool));
    
            var leyendasupParameter = leyendasup != null ?
                new ObjectParameter("leyendasup", leyendasup) :
                new ObjectParameter("leyendasup", typeof(string));
    
            var tiposopcionesParameter = tiposopciones != null ?
                new ObjectParameter("tiposopciones", tiposopciones) :
                new ObjectParameter("tiposopciones", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarPregunta", idpregParameter, idcParameter, idtipopregParameter, descripcionpregParameter, obligatorioParameter, leyendasupParameter, tiposopcionesParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarPreguntaAbierta(Nullable<int> idtipodato, Nullable<int> idpregA, Nullable<bool> especificarRango, string valormax, string valormin)
        {
            var idtipodatoParameter = idtipodato.HasValue ?
                new ObjectParameter("idtipodato", idtipodato) :
                new ObjectParameter("idtipodato", typeof(int));
    
            var idpregAParameter = idpregA.HasValue ?
                new ObjectParameter("IdpregA", idpregA) :
                new ObjectParameter("IdpregA", typeof(int));
    
            var especificarRangoParameter = especificarRango.HasValue ?
                new ObjectParameter("especificarRango", especificarRango) :
                new ObjectParameter("especificarRango", typeof(bool));
    
            var valormaxParameter = valormax != null ?
                new ObjectParameter("valormax", valormax) :
                new ObjectParameter("valormax", typeof(string));
    
            var valorminParameter = valormin != null ?
                new ObjectParameter("valormin", valormin) :
                new ObjectParameter("valormin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarPreguntaAbierta", idtipodatoParameter, idpregAParameter, especificarRangoParameter, valormaxParameter, valorminParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarPreguntaObservaciones(Nullable<int> idpregobser, string detalleobser, string leyenda, Nullable<bool> respuestas)
        {
            var idpregobserParameter = idpregobser.HasValue ?
                new ObjectParameter("idpregobser", idpregobser) :
                new ObjectParameter("idpregobser", typeof(int));
    
            var detalleobserParameter = detalleobser != null ?
                new ObjectParameter("detalleobser", detalleobser) :
                new ObjectParameter("detalleobser", typeof(string));
    
            var leyendaParameter = leyenda != null ?
                new ObjectParameter("leyenda", leyenda) :
                new ObjectParameter("leyenda", typeof(string));
    
            var respuestasParameter = respuestas.HasValue ?
                new ObjectParameter("respuestas", respuestas) :
                new ObjectParameter("respuestas", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarPreguntaObservaciones", idpregobserParameter, detalleobserParameter, leyendaParameter, respuestasParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarOpcionPreguntaSeleccion(Nullable<int> idopcion)
        {
            var idopcionParameter = idopcion.HasValue ?
                new ObjectParameter("Idopcion", idopcion) :
                new ObjectParameter("Idopcion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarOpcionPreguntaSeleccion", idopcionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarOpcionRespuestaPreguntaSeleccion(Nullable<int> idopresp)
        {
            var idoprespParameter = idopresp.HasValue ?
                new ObjectParameter("Idopresp", idopresp) :
                new ObjectParameter("Idopresp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarOpcionRespuestaPreguntaSeleccion", idoprespParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarPregunta(Nullable<int> idpreg)
        {
            var idpregParameter = idpreg.HasValue ?
                new ObjectParameter("Idpreg", idpreg) :
                new ObjectParameter("Idpreg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarPregunta", idpregParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarPreguntaAbierta(Nullable<int> idpregA)
        {
            var idpregAParameter = idpregA.HasValue ?
                new ObjectParameter("IdpregA", idpregA) :
                new ObjectParameter("IdpregA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarPreguntaAbierta", idpregAParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarPreguntaObservaciones(Nullable<int> idpregobser)
        {
            var idpregobserParameter = idpregobser.HasValue ?
                new ObjectParameter("idpregobser", idpregobser) :
                new ObjectParameter("idpregobser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarPreguntaObservaciones", idpregobserParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> InsertarOpcionesRespuestaPreguntaSeleccion(string descripcionopresp, Nullable<int> ordenopresp, Nullable<int> idpreg)
        {
            var descripcionoprespParameter = descripcionopresp != null ?
                new ObjectParameter("descripcionopresp", descripcionopresp) :
                new ObjectParameter("descripcionopresp", typeof(string));
    
            var ordenoprespParameter = ordenopresp.HasValue ?
                new ObjectParameter("ordenopresp", ordenopresp) :
                new ObjectParameter("ordenopresp", typeof(int));
    
            var idpregParameter = idpreg.HasValue ?
                new ObjectParameter("idpreg", idpreg) :
                new ObjectParameter("idpreg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("InsertarOpcionesRespuestaPreguntaSeleccion", descripcionoprespParameter, ordenoprespParameter, idpregParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> InsertarPregunta(Nullable<int> idc, Nullable<int> idtipopreg, string descripcionpreg, Nullable<bool> obligatorio, Nullable<int> ordenpreg, string leyendasup, string tiposopciones, Nullable<int> idpregA)
        {
            var idcParameter = idc.HasValue ?
                new ObjectParameter("Idc", idc) :
                new ObjectParameter("Idc", typeof(int));
    
            var idtipopregParameter = idtipopreg.HasValue ?
                new ObjectParameter("Idtipopreg", idtipopreg) :
                new ObjectParameter("Idtipopreg", typeof(int));
    
            var descripcionpregParameter = descripcionpreg != null ?
                new ObjectParameter("descripcionpreg", descripcionpreg) :
                new ObjectParameter("descripcionpreg", typeof(string));
    
            var obligatorioParameter = obligatorio.HasValue ?
                new ObjectParameter("obligatorio", obligatorio) :
                new ObjectParameter("obligatorio", typeof(bool));
    
            var ordenpregParameter = ordenpreg.HasValue ?
                new ObjectParameter("ordenpreg", ordenpreg) :
                new ObjectParameter("ordenpreg", typeof(int));
    
            var leyendasupParameter = leyendasup != null ?
                new ObjectParameter("leyendasup", leyendasup) :
                new ObjectParameter("leyendasup", typeof(string));
    
            var tiposopcionesParameter = tiposopciones != null ?
                new ObjectParameter("tiposopciones", tiposopciones) :
                new ObjectParameter("tiposopciones", typeof(string));
    
            var idpregAParameter = idpregA.HasValue ?
                new ObjectParameter("idpregA", idpregA) :
                new ObjectParameter("idpregA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("InsertarPregunta", idcParameter, idtipopregParameter, descripcionpregParameter, obligatorioParameter, ordenpregParameter, leyendasupParameter, tiposopcionesParameter, idpregAParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> InsertarPreguntaAbierta(Nullable<int> idtipodato, Nullable<int> idpreg, Nullable<bool> especificarRango, string valormax, string valormin)
        {
            var idtipodatoParameter = idtipodato.HasValue ?
                new ObjectParameter("idtipodato", idtipodato) :
                new ObjectParameter("idtipodato", typeof(int));
    
            var idpregParameter = idpreg.HasValue ?
                new ObjectParameter("Idpreg", idpreg) :
                new ObjectParameter("Idpreg", typeof(int));
    
            var especificarRangoParameter = especificarRango.HasValue ?
                new ObjectParameter("especificarRango", especificarRango) :
                new ObjectParameter("especificarRango", typeof(bool));
    
            var valormaxParameter = valormax != null ?
                new ObjectParameter("valormax", valormax) :
                new ObjectParameter("valormax", typeof(string));
    
            var valorminParameter = valormin != null ?
                new ObjectParameter("valormin", valormin) :
                new ObjectParameter("valormin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("InsertarPreguntaAbierta", idtipodatoParameter, idpregParameter, especificarRangoParameter, valormaxParameter, valorminParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> InsertarPreguntaObservaciones(Nullable<int> idpreg, string detalleobser, Nullable<int> ordenobser, string leyenda, Nullable<bool> respuestas)
        {
            var idpregParameter = idpreg.HasValue ?
                new ObjectParameter("Idpreg", idpreg) :
                new ObjectParameter("Idpreg", typeof(int));
    
            var detalleobserParameter = detalleobser != null ?
                new ObjectParameter("detalleobser", detalleobser) :
                new ObjectParameter("detalleobser", typeof(string));
    
            var ordenobserParameter = ordenobser.HasValue ?
                new ObjectParameter("ordenobser", ordenobser) :
                new ObjectParameter("ordenobser", typeof(int));
    
            var leyendaParameter = leyenda != null ?
                new ObjectParameter("leyenda", leyenda) :
                new ObjectParameter("leyenda", typeof(string));
    
            var respuestasParameter = respuestas.HasValue ?
                new ObjectParameter("respuestas", respuestas) :
                new ObjectParameter("respuestas", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("InsertarPreguntaObservaciones", idpregParameter, detalleobserParameter, ordenobserParameter, leyendaParameter, respuestasParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> InsertarPreguntaSeleccion(Nullable<int> idpreg, string descripcionpregS, Nullable<int> identificadorpregS)
        {
            var idpregParameter = idpreg.HasValue ?
                new ObjectParameter("Idpreg", idpreg) :
                new ObjectParameter("Idpreg", typeof(int));
    
            var descripcionpregSParameter = descripcionpregS != null ?
                new ObjectParameter("descripcionpregS", descripcionpregS) :
                new ObjectParameter("descripcionpregS", typeof(string));
    
            var identificadorpregSParameter = identificadorpregS.HasValue ?
                new ObjectParameter("identificadorpregS", identificadorpregS) :
                new ObjectParameter("identificadorpregS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("InsertarPreguntaSeleccion", idpregParameter, descripcionpregSParameter, identificadorpregSParameter);
        }
    
        public virtual ObjectResult<ListarTipodeDatoPreguntaAbierta_Result> ListarTipodeDatoPreguntaAbierta()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarTipodeDatoPreguntaAbierta_Result>("ListarTipodeDatoPreguntaAbierta");
        }
    
        public virtual ObjectResult<ListarTipodePregunta_Result> ListarTipodePregunta()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarTipodePregunta_Result>("ListarTipodePregunta");
        }
    
        public virtual ObjectResult<VerOpcionesdePreguntaSeleccion_Result> VerOpcionesdePreguntaSeleccion(Nullable<int> idpreg)
        {
            var idpregParameter = idpreg.HasValue ?
                new ObjectParameter("Idpreg", idpreg) :
                new ObjectParameter("Idpreg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerOpcionesdePreguntaSeleccion_Result>("VerOpcionesdePreguntaSeleccion", idpregParameter);
        }
    
        public virtual ObjectResult<VerOpcionesRespuestaSeleccion_Result> VerOpcionesRespuestaSeleccion(Nullable<int> idpreg)
        {
            var idpregParameter = idpreg.HasValue ?
                new ObjectParameter("idpreg", idpreg) :
                new ObjectParameter("idpreg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerOpcionesRespuestaSeleccion_Result>("VerOpcionesRespuestaSeleccion", idpregParameter);
        }
    
        public virtual ObjectResult<VerPreguntaAbierta_Result> VerPreguntaAbierta(Nullable<int> idpreg)
        {
            var idpregParameter = idpreg.HasValue ?
                new ObjectParameter("Idpreg", idpreg) :
                new ObjectParameter("Idpreg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerPreguntaAbierta_Result>("VerPreguntaAbierta", idpregParameter);
        }
    
        public virtual ObjectResult<VerPreguntaInsertada_Result> VerPreguntaInsertada(Nullable<int> idpreg)
        {
            var idpregParameter = idpreg.HasValue ?
                new ObjectParameter("Idpreg", idpreg) :
                new ObjectParameter("Idpreg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerPreguntaInsertada_Result>("VerPreguntaInsertada", idpregParameter);
        }
    
        public virtual ObjectResult<VerPreguntaObservacionesxIdpreg_Result> VerPreguntaObservacionesxIdpreg(Nullable<int> idpreg)
        {
            var idpregParameter = idpreg.HasValue ?
                new ObjectParameter("Idpreg", idpreg) :
                new ObjectParameter("Idpreg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerPreguntaObservacionesxIdpreg_Result>("VerPreguntaObservacionesxIdpreg", idpregParameter);
        }
    
        public virtual ObjectResult<VerPreguntaSeleccion_Result> VerPreguntaSeleccion(Nullable<int> idpreg)
        {
            var idpregParameter = idpreg.HasValue ?
                new ObjectParameter("Idpreg", idpreg) :
                new ObjectParameter("Idpreg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerPreguntaSeleccion_Result>("VerPreguntaSeleccion", idpregParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarProceso(Nullable<int> idproceso, string fechactualizada, string estado_Proceso, Nullable<int> idpanterior, Nullable<int> opresult, Nullable<int> identificador)
        {
            var idprocesoParameter = idproceso.HasValue ?
                new ObjectParameter("Idproceso", idproceso) :
                new ObjectParameter("Idproceso", typeof(int));
    
            var fechactualizadaParameter = fechactualizada != null ?
                new ObjectParameter("Fechactualizada", fechactualizada) :
                new ObjectParameter("Fechactualizada", typeof(string));
    
            var estado_ProcesoParameter = estado_Proceso != null ?
                new ObjectParameter("Estado_Proceso", estado_Proceso) :
                new ObjectParameter("Estado_Proceso", typeof(string));
    
            var idpanteriorParameter = idpanterior.HasValue ?
                new ObjectParameter("Idpanterior", idpanterior) :
                new ObjectParameter("Idpanterior", typeof(int));
    
            var opresultParameter = opresult.HasValue ?
                new ObjectParameter("opresult", opresult) :
                new ObjectParameter("opresult", typeof(int));
    
            var identificadorParameter = identificador.HasValue ?
                new ObjectParameter("identificador", identificador) :
                new ObjectParameter("identificador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarProceso", idprocesoParameter, fechactualizadaParameter, estado_ProcesoParameter, idpanteriorParameter, opresultParameter, identificadorParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> IniciarProceso(Nullable<int> idlibro, string fechainicio, string estado_Proceso, Nullable<int> idtipoproceso, Nullable<int> identificador)
        {
            var idlibroParameter = idlibro.HasValue ?
                new ObjectParameter("Idlibro", idlibro) :
                new ObjectParameter("Idlibro", typeof(int));
    
            var fechainicioParameter = fechainicio != null ?
                new ObjectParameter("Fechainicio", fechainicio) :
                new ObjectParameter("Fechainicio", typeof(string));
    
            var estado_ProcesoParameter = estado_Proceso != null ?
                new ObjectParameter("Estado_Proceso", estado_Proceso) :
                new ObjectParameter("Estado_Proceso", typeof(string));
    
            var idtipoprocesoParameter = idtipoproceso.HasValue ?
                new ObjectParameter("Idtipoproceso", idtipoproceso) :
                new ObjectParameter("Idtipoproceso", typeof(int));
    
            var identificadorParameter = identificador.HasValue ?
                new ObjectParameter("identificador", identificador) :
                new ObjectParameter("identificador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("IniciarProceso", idlibroParameter, fechainicioParameter, estado_ProcesoParameter, idtipoprocesoParameter, identificadorParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> IniciarProceso2(Nullable<int> iDlibro, string fechainicio, string fechactualizada, string estado_Proceso, Nullable<int> idtipoproceso, Nullable<int> idpanterior, Nullable<int> identificador)
        {
            var iDlibroParameter = iDlibro.HasValue ?
                new ObjectParameter("IDlibro", iDlibro) :
                new ObjectParameter("IDlibro", typeof(int));
    
            var fechainicioParameter = fechainicio != null ?
                new ObjectParameter("Fechainicio", fechainicio) :
                new ObjectParameter("Fechainicio", typeof(string));
    
            var fechactualizadaParameter = fechactualizada != null ?
                new ObjectParameter("Fechactualizada", fechactualizada) :
                new ObjectParameter("Fechactualizada", typeof(string));
    
            var estado_ProcesoParameter = estado_Proceso != null ?
                new ObjectParameter("Estado_Proceso", estado_Proceso) :
                new ObjectParameter("Estado_Proceso", typeof(string));
    
            var idtipoprocesoParameter = idtipoproceso.HasValue ?
                new ObjectParameter("Idtipoproceso", idtipoproceso) :
                new ObjectParameter("Idtipoproceso", typeof(int));
    
            var idpanteriorParameter = idpanterior.HasValue ?
                new ObjectParameter("Idpanterior", idpanterior) :
                new ObjectParameter("Idpanterior", typeof(int));
    
            var identificadorParameter = identificador.HasValue ?
                new ObjectParameter("identificador", identificador) :
                new ObjectParameter("identificador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("IniciarProceso2", iDlibroParameter, fechainicioParameter, fechactualizadaParameter, estado_ProcesoParameter, idtipoprocesoParameter, idpanteriorParameter, identificadorParameter);
        }
    
        public virtual ObjectResult<ListarRequerimientosxProceso_Result> ListarRequerimientosxProceso(Nullable<int> numproceso)
        {
            var numprocesoParameter = numproceso.HasValue ?
                new ObjectParameter("numproceso", numproceso) :
                new ObjectParameter("numproceso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarRequerimientosxProceso_Result>("ListarRequerimientosxProceso", numprocesoParameter);
        }
    
        public virtual ObjectResult<VerProceso_Result> VerProceso(Nullable<int> idlibro)
        {
            var idlibroParameter = idlibro.HasValue ?
                new ObjectParameter("Idlibro", idlibro) :
                new ObjectParameter("Idlibro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerProceso_Result>("VerProceso", idlibroParameter);
        }
    
        public virtual ObjectResult<VerProcesoxId_Result> VerProcesoxId(Nullable<int> idlibro, Nullable<int> idproceso)
        {
            var idlibroParameter = idlibro.HasValue ?
                new ObjectParameter("Idlibro", idlibro) :
                new ObjectParameter("Idlibro", typeof(int));
    
            var idprocesoParameter = idproceso.HasValue ?
                new ObjectParameter("Idproceso", idproceso) :
                new ObjectParameter("Idproceso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerProcesoxId_Result>("VerProcesoxId", idlibroParameter, idprocesoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AgregarRequerimientoProceso(string detallerequerimiento, Nullable<int> idtipopro, Nullable<int> idtipodato, string descripcionrequerimiento, string emisor, string resp, Nullable<bool> visibleadmin, Nullable<bool> visibleE, Nullable<bool> visibleautor, Nullable<bool> obligatorio, Nullable<bool> resultproceso)
        {
            var detallerequerimientoParameter = detallerequerimiento != null ?
                new ObjectParameter("detallerequerimiento", detallerequerimiento) :
                new ObjectParameter("detallerequerimiento", typeof(string));
    
            var idtipoproParameter = idtipopro.HasValue ?
                new ObjectParameter("Idtipopro", idtipopro) :
                new ObjectParameter("Idtipopro", typeof(int));
    
            var idtipodatoParameter = idtipodato.HasValue ?
                new ObjectParameter("idtipodato", idtipodato) :
                new ObjectParameter("idtipodato", typeof(int));
    
            var descripcionrequerimientoParameter = descripcionrequerimiento != null ?
                new ObjectParameter("descripcionrequerimiento", descripcionrequerimiento) :
                new ObjectParameter("descripcionrequerimiento", typeof(string));
    
            var emisorParameter = emisor != null ?
                new ObjectParameter("emisor", emisor) :
                new ObjectParameter("emisor", typeof(string));
    
            var respParameter = resp != null ?
                new ObjectParameter("resp", resp) :
                new ObjectParameter("resp", typeof(string));
    
            var visibleadminParameter = visibleadmin.HasValue ?
                new ObjectParameter("visibleadmin", visibleadmin) :
                new ObjectParameter("visibleadmin", typeof(bool));
    
            var visibleEParameter = visibleE.HasValue ?
                new ObjectParameter("visibleE", visibleE) :
                new ObjectParameter("visibleE", typeof(bool));
    
            var visibleautorParameter = visibleautor.HasValue ?
                new ObjectParameter("visibleautor", visibleautor) :
                new ObjectParameter("visibleautor", typeof(bool));
    
            var obligatorioParameter = obligatorio.HasValue ?
                new ObjectParameter("obligatorio", obligatorio) :
                new ObjectParameter("obligatorio", typeof(bool));
    
            var resultprocesoParameter = resultproceso.HasValue ?
                new ObjectParameter("resultproceso", resultproceso) :
                new ObjectParameter("resultproceso", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AgregarRequerimientoProceso", detallerequerimientoParameter, idtipoproParameter, idtipodatoParameter, descripcionrequerimientoParameter, emisorParameter, respParameter, visibleadminParameter, visibleEParameter, visibleautorParameter, obligatorioParameter, resultprocesoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AgregarRespuestaRequerimiento(Nullable<int> idrequerimiento, string detalle, Nullable<int> progreso)
        {
            var idrequerimientoParameter = idrequerimiento.HasValue ?
                new ObjectParameter("idrequerimiento", idrequerimiento) :
                new ObjectParameter("idrequerimiento", typeof(int));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            var progresoParameter = progreso.HasValue ?
                new ObjectParameter("progreso", progreso) :
                new ObjectParameter("progreso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AgregarRespuestaRequerimiento", idrequerimientoParameter, detalleParameter, progresoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarRequerimientoProceso(Nullable<int> idrequerimiento, string detallerequerimiento, Nullable<int> idtipopro, Nullable<int> idtipodato, string descripcionrequerimiento, string emisor, string resp, Nullable<bool> visibleadmin, Nullable<bool> visibleE, Nullable<bool> visibleautor, Nullable<bool> obligatorio, Nullable<bool> resultproceso)
        {
            var idrequerimientoParameter = idrequerimiento.HasValue ?
                new ObjectParameter("Idrequerimiento", idrequerimiento) :
                new ObjectParameter("Idrequerimiento", typeof(int));
    
            var detallerequerimientoParameter = detallerequerimiento != null ?
                new ObjectParameter("detallerequerimiento", detallerequerimiento) :
                new ObjectParameter("detallerequerimiento", typeof(string));
    
            var idtipoproParameter = idtipopro.HasValue ?
                new ObjectParameter("Idtipopro", idtipopro) :
                new ObjectParameter("Idtipopro", typeof(int));
    
            var idtipodatoParameter = idtipodato.HasValue ?
                new ObjectParameter("idtipodato", idtipodato) :
                new ObjectParameter("idtipodato", typeof(int));
    
            var descripcionrequerimientoParameter = descripcionrequerimiento != null ?
                new ObjectParameter("descripcionrequerimiento", descripcionrequerimiento) :
                new ObjectParameter("descripcionrequerimiento", typeof(string));
    
            var emisorParameter = emisor != null ?
                new ObjectParameter("emisor", emisor) :
                new ObjectParameter("emisor", typeof(string));
    
            var respParameter = resp != null ?
                new ObjectParameter("resp", resp) :
                new ObjectParameter("resp", typeof(string));
    
            var visibleadminParameter = visibleadmin.HasValue ?
                new ObjectParameter("visibleadmin", visibleadmin) :
                new ObjectParameter("visibleadmin", typeof(bool));
    
            var visibleEParameter = visibleE.HasValue ?
                new ObjectParameter("visibleE", visibleE) :
                new ObjectParameter("visibleE", typeof(bool));
    
            var visibleautorParameter = visibleautor.HasValue ?
                new ObjectParameter("visibleautor", visibleautor) :
                new ObjectParameter("visibleautor", typeof(bool));
    
            var obligatorioParameter = obligatorio.HasValue ?
                new ObjectParameter("obligatorio", obligatorio) :
                new ObjectParameter("obligatorio", typeof(bool));
    
            var resultprocesoParameter = resultproceso.HasValue ?
                new ObjectParameter("resultproceso", resultproceso) :
                new ObjectParameter("resultproceso", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarRequerimientoProceso", idrequerimientoParameter, detallerequerimientoParameter, idtipoproParameter, idtipodatoParameter, descripcionrequerimientoParameter, emisorParameter, respParameter, visibleadminParameter, visibleEParameter, visibleautorParameter, obligatorioParameter, resultprocesoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarRespuestaRequerimiento(Nullable<int> idrespuesta, string detalle, Nullable<int> progreso)
        {
            var idrespuestaParameter = idrespuesta.HasValue ?
                new ObjectParameter("idrespuesta", idrespuesta) :
                new ObjectParameter("idrespuesta", typeof(int));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            var progresoParameter = progreso.HasValue ?
                new ObjectParameter("progreso", progreso) :
                new ObjectParameter("progreso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarRespuestaRequerimiento", idrespuestaParameter, detalleParameter, progresoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarRequerimientoProceso(Nullable<int> idrequerimiento)
        {
            var idrequerimientoParameter = idrequerimiento.HasValue ?
                new ObjectParameter("Idrequerimiento", idrequerimiento) :
                new ObjectParameter("Idrequerimiento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarRequerimientoProceso", idrequerimientoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarRespuestaRequerimiento(Nullable<int> idrespuesta)
        {
            var idrespuestaParameter = idrespuesta.HasValue ?
                new ObjectParameter("idrespuesta", idrespuesta) :
                new ObjectParameter("idrespuesta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarRespuestaRequerimiento", idrespuestaParameter);
        }
    
        public virtual ObjectResult<ListarRequerimientoProceso_Result> ListarRequerimientoProceso(Nullable<int> idproceso)
        {
            var idprocesoParameter = idproceso.HasValue ?
                new ObjectParameter("Idproceso", idproceso) :
                new ObjectParameter("Idproceso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarRequerimientoProceso_Result>("ListarRequerimientoProceso", idprocesoParameter);
        }
    
        public virtual ObjectResult<ListarRequerimientoProcesoxId_Result> ListarRequerimientoProcesoxId(Nullable<int> idtipoproceso, string visible)
        {
            var idtipoprocesoParameter = idtipoproceso.HasValue ?
                new ObjectParameter("Idtipoproceso", idtipoproceso) :
                new ObjectParameter("Idtipoproceso", typeof(int));
    
            var visibleParameter = visible != null ?
                new ObjectParameter("visible", visible) :
                new ObjectParameter("visible", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarRequerimientoProcesoxId_Result>("ListarRequerimientoProcesoxId", idtipoprocesoParameter, visibleParameter);
        }
    
        public virtual ObjectResult<ListarRespuestaRequerimiento_Result> ListarRespuestaRequerimiento(Nullable<int> idrequerimiento)
        {
            var idrequerimientoParameter = idrequerimiento.HasValue ?
                new ObjectParameter("idrequerimiento", idrequerimiento) :
                new ObjectParameter("idrequerimiento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarRespuestaRequerimiento_Result>("ListarRespuestaRequerimiento", idrequerimientoParameter);
        }
    
        public virtual ObjectResult<ListarRespuestasRequerimientoxIdRequerimiento_Result> ListarRespuestasRequerimientoxIdRequerimiento(Nullable<int> idresp, Nullable<int> idrequerimiento)
        {
            var idrespParameter = idresp.HasValue ?
                new ObjectParameter("idresp", idresp) :
                new ObjectParameter("idresp", typeof(int));
    
            var idrequerimientoParameter = idrequerimiento.HasValue ?
                new ObjectParameter("idrequerimiento", idrequerimiento) :
                new ObjectParameter("idrequerimiento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarRespuestasRequerimientoxIdRequerimiento_Result>("ListarRespuestasRequerimientoxIdRequerimiento", idrespParameter, idrequerimientoParameter);
        }
    
        public virtual ObjectResult<ListarRespuestasRequerimientoxTipoProceso_Result> ListarRespuestasRequerimientoxTipoProceso(Nullable<int> idtipoproceso, string visible)
        {
            var idtipoprocesoParameter = idtipoproceso.HasValue ?
                new ObjectParameter("idtipoproceso", idtipoproceso) :
                new ObjectParameter("idtipoproceso", typeof(int));
    
            var visibleParameter = visible != null ?
                new ObjectParameter("visible", visible) :
                new ObjectParameter("visible", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarRespuestasRequerimientoxTipoProceso_Result>("ListarRespuestasRequerimientoxTipoProceso", idtipoprocesoParameter, visibleParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AgregarSlider(string titulo, string enunciado, string imagenslider, string url)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var enunciadoParameter = enunciado != null ?
                new ObjectParameter("enunciado", enunciado) :
                new ObjectParameter("enunciado", typeof(string));
    
            var imagensliderParameter = imagenslider != null ?
                new ObjectParameter("imagenslider", imagenslider) :
                new ObjectParameter("imagenslider", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AgregarSlider", tituloParameter, enunciadoParameter, imagensliderParameter, urlParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarSlider(Nullable<int> idslider, string titulo, string enunciado, string imagenslider, string url)
        {
            var idsliderParameter = idslider.HasValue ?
                new ObjectParameter("Idslider", idslider) :
                new ObjectParameter("Idslider", typeof(int));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var enunciadoParameter = enunciado != null ?
                new ObjectParameter("enunciado", enunciado) :
                new ObjectParameter("enunciado", typeof(string));
    
            var imagensliderParameter = imagenslider != null ?
                new ObjectParameter("imagenslider", imagenslider) :
                new ObjectParameter("imagenslider", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarSlider", idsliderParameter, tituloParameter, enunciadoParameter, imagensliderParameter, urlParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarSlider(Nullable<int> idslider)
        {
            var idsliderParameter = idslider.HasValue ?
                new ObjectParameter("Idslider", idslider) :
                new ObjectParameter("Idslider", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarSlider", idsliderParameter);
        }
    
        public virtual ObjectResult<VerSliders_Result> VerSliders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerSliders_Result>("VerSliders");
        }
    
        public virtual ObjectResult<Nullable<int>> AgregarTiposProcesos(string detalletipospro, Nullable<int> progreso, string duracionproceso, Nullable<int> numero, Nullable<int> identificador, string descripcion)
        {
            var detalletiposproParameter = detalletipospro != null ?
                new ObjectParameter("detalletipospro", detalletipospro) :
                new ObjectParameter("detalletipospro", typeof(string));
    
            var progresoParameter = progreso.HasValue ?
                new ObjectParameter("progreso", progreso) :
                new ObjectParameter("progreso", typeof(int));
    
            var duracionprocesoParameter = duracionproceso != null ?
                new ObjectParameter("duracionproceso", duracionproceso) :
                new ObjectParameter("duracionproceso", typeof(string));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(int));
    
            var identificadorParameter = identificador.HasValue ?
                new ObjectParameter("identificador", identificador) :
                new ObjectParameter("identificador", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AgregarTiposProcesos", detalletiposproParameter, progresoParameter, duracionprocesoParameter, numeroParameter, identificadorParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarTiposProcesos(Nullable<int> idtipoproceso, string detalletipospro, Nullable<int> progreso, string duracionproceso, string descripcion, Nullable<int> numero)
        {
            var idtipoprocesoParameter = idtipoproceso.HasValue ?
                new ObjectParameter("Idtipoproceso", idtipoproceso) :
                new ObjectParameter("Idtipoproceso", typeof(int));
    
            var detalletiposproParameter = detalletipospro != null ?
                new ObjectParameter("detalletipospro", detalletipospro) :
                new ObjectParameter("detalletipospro", typeof(string));
    
            var progresoParameter = progreso.HasValue ?
                new ObjectParameter("progreso", progreso) :
                new ObjectParameter("progreso", typeof(int));
    
            var duracionprocesoParameter = duracionproceso != null ?
                new ObjectParameter("duracionproceso", duracionproceso) :
                new ObjectParameter("duracionproceso", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarTiposProcesos", idtipoprocesoParameter, detalletiposproParameter, progresoParameter, duracionprocesoParameter, descripcionParameter, numeroParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarTiposProcesos(Nullable<int> idtipoproceso)
        {
            var idtipoprocesoParameter = idtipoproceso.HasValue ?
                new ObjectParameter("Idtipoproceso", idtipoproceso) :
                new ObjectParameter("Idtipoproceso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarTiposProcesos", idtipoprocesoParameter);
        }
    
        public virtual ObjectResult<ListarTiposProcesos_Result> ListarTiposProcesos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarTiposProcesos_Result>("ListarTiposProcesos");
        }
    
        public virtual ObjectResult<ListarTiposProcesosxnum_Result> ListarTiposProcesosxnum(Nullable<int> num)
        {
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarTiposProcesosxnum_Result>("ListarTiposProcesosxnum", numParameter);
        }
    
        public virtual ObjectResult<ConsultarTipoUsuario_Result> ConsultarTipoUsuario()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarTipoUsuario_Result>("ConsultarTipoUsuario");
        }
    
        public virtual ObjectResult<Nullable<int>> DeshabilitarUsuario(Nullable<int> iduser)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("DeshabilitarUsuario", iduserParameter);
        }
    
        public virtual ObjectResult<DetalleUsuario_Result> DetalleUsuario(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DetalleUsuario_Result>("DetalleUsuario", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarNumLibrosFinalizados(Nullable<int> iduser)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarNumLibrosFinalizados", iduserParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarPerfil(Nullable<int> iduser, string nombre1, string nombre2, string apellidoP, string apellidoS, string email, string filial, string telefono, string direccion, string pass, string salt, string foto)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            var nombre1Parameter = nombre1 != null ?
                new ObjectParameter("Nombre1", nombre1) :
                new ObjectParameter("Nombre1", typeof(string));
    
            var nombre2Parameter = nombre2 != null ?
                new ObjectParameter("Nombre2", nombre2) :
                new ObjectParameter("Nombre2", typeof(string));
    
            var apellidoPParameter = apellidoP != null ?
                new ObjectParameter("ApellidoP", apellidoP) :
                new ObjectParameter("ApellidoP", typeof(string));
    
            var apellidoSParameter = apellidoS != null ?
                new ObjectParameter("ApellidoS", apellidoS) :
                new ObjectParameter("ApellidoS", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var filialParameter = filial != null ?
                new ObjectParameter("Filial", filial) :
                new ObjectParameter("Filial", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("Foto", foto) :
                new ObjectParameter("Foto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarPerfil", iduserParameter, nombre1Parameter, nombre2Parameter, apellidoPParameter, apellidoSParameter, emailParameter, filialParameter, telefonoParameter, direccionParameter, passParameter, saltParameter, fotoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarPerfil2(Nullable<int> iduser, string nombre1, string nombre2, string apellidoP, string apellidoS, string email, string filial, string telefono, string direccion, string foto)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            var nombre1Parameter = nombre1 != null ?
                new ObjectParameter("Nombre1", nombre1) :
                new ObjectParameter("Nombre1", typeof(string));
    
            var nombre2Parameter = nombre2 != null ?
                new ObjectParameter("Nombre2", nombre2) :
                new ObjectParameter("Nombre2", typeof(string));
    
            var apellidoPParameter = apellidoP != null ?
                new ObjectParameter("ApellidoP", apellidoP) :
                new ObjectParameter("ApellidoP", typeof(string));
    
            var apellidoSParameter = apellidoS != null ?
                new ObjectParameter("ApellidoS", apellidoS) :
                new ObjectParameter("ApellidoS", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var filialParameter = filial != null ?
                new ObjectParameter("Filial", filial) :
                new ObjectParameter("Filial", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("Foto", foto) :
                new ObjectParameter("Foto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarPerfil2", iduserParameter, nombre1Parameter, nombre2Parameter, apellidoPParameter, apellidoSParameter, emailParameter, filialParameter, telefonoParameter, direccionParameter, fotoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarToken(string email, string token_recovery)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var token_recoveryParameter = token_recovery != null ?
                new ObjectParameter("token_recovery", token_recovery) :
                new ObjectParameter("token_recovery", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarToken", emailParameter, token_recoveryParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EditarUsuario(Nullable<int> iduser, string nombre1, string nombre2, string apellidoP, string apellidoS, string email, string username, string password, string salt, string telefono, string direccion)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            var nombre1Parameter = nombre1 != null ?
                new ObjectParameter("Nombre1", nombre1) :
                new ObjectParameter("Nombre1", typeof(string));
    
            var nombre2Parameter = nombre2 != null ?
                new ObjectParameter("Nombre2", nombre2) :
                new ObjectParameter("Nombre2", typeof(string));
    
            var apellidoPParameter = apellidoP != null ?
                new ObjectParameter("ApellidoP", apellidoP) :
                new ObjectParameter("ApellidoP", typeof(string));
    
            var apellidoSParameter = apellidoS != null ?
                new ObjectParameter("ApellidoS", apellidoS) :
                new ObjectParameter("ApellidoS", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EditarUsuario", iduserParameter, nombre1Parameter, nombre2Parameter, apellidoPParameter, apellidoSParameter, emailParameter, usernameParameter, passwordParameter, saltParameter, telefonoParameter, direccionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarFoto(Nullable<int> iduser)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarFoto", iduserParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EliminarUsuario(Nullable<int> iduser)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("Iduser", iduser) :
                new ObjectParameter("Iduser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EliminarUsuario", iduserParameter);
        }
    
        public virtual ObjectResult<ListarUsuarios_Result> ListarUsuarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarUsuarios_Result>("ListarUsuarios");
        }
    
        public virtual ObjectResult<LoginUsers_Result> LoginUsers(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoginUsers_Result>("LoginUsers", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<ObtenerUsuario_Result> ObtenerUsuario(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerUsuario_Result>("ObtenerUsuario", usernameParameter);
        }
    
        public virtual ObjectResult<ObtenerUsuarioxTipoUsuario_Result> ObtenerUsuarioxTipoUsuario(string tipouser)
        {
            var tipouserParameter = tipouser != null ?
                new ObjectParameter("tipouser", tipouser) :
                new ObjectParameter("tipouser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerUsuarioxTipoUsuario_Result>("ObtenerUsuarioxTipoUsuario", tipouserParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RecuperarPass(string token, string password, string salt)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RecuperarPass", tokenParameter, passwordParameter, saltParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RegistroUsuario(string nombre1, string nombre2, string apellidoP, string apellidoS, string email, string username, string password, string salt, string foto, Nullable<int> idTipousuario, string telefono, string direccion, string filial, Nullable<int> libproceso)
        {
            var nombre1Parameter = nombre1 != null ?
                new ObjectParameter("Nombre1", nombre1) :
                new ObjectParameter("Nombre1", typeof(string));
    
            var nombre2Parameter = nombre2 != null ?
                new ObjectParameter("Nombre2", nombre2) :
                new ObjectParameter("Nombre2", typeof(string));
    
            var apellidoPParameter = apellidoP != null ?
                new ObjectParameter("ApellidoP", apellidoP) :
                new ObjectParameter("ApellidoP", typeof(string));
    
            var apellidoSParameter = apellidoS != null ?
                new ObjectParameter("ApellidoS", apellidoS) :
                new ObjectParameter("ApellidoS", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("Foto", foto) :
                new ObjectParameter("Foto", typeof(string));
    
            var idTipousuarioParameter = idTipousuario.HasValue ?
                new ObjectParameter("IdTipousuario", idTipousuario) :
                new ObjectParameter("IdTipousuario", typeof(int));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var filialParameter = filial != null ?
                new ObjectParameter("Filial", filial) :
                new ObjectParameter("Filial", typeof(string));
    
            var libprocesoParameter = libproceso.HasValue ?
                new ObjectParameter("Libproceso", libproceso) :
                new ObjectParameter("Libproceso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RegistroUsuario", nombre1Parameter, nombre2Parameter, apellidoPParameter, apellidoSParameter, emailParameter, usernameParameter, passwordParameter, saltParameter, fotoParameter, idTipousuarioParameter, telefonoParameter, direccionParameter, filialParameter, libprocesoParameter);
        }
    
        public virtual ObjectResult<VerificarToken_Result> VerificarToken(string token)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerificarToken_Result>("VerificarToken", tokenParameter);
        }
    }
}
